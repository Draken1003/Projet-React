{"ast":null,"code":"'use strict';\n\nconst process = require('node:process');\nconst Action = require('./Action');\nlet deprecationEmitted = false;\nclass WebhooksUpdate extends Action {\n  handle(data) {\n    const client = this.client;\n    const channel = client.channels.cache.get(data.channel_id);\n    if (!channel) return;\n\n    // TODO: change to Events.WebhooksUpdate in the next major version\n    /**\n     * Emitted whenever a channel has its webhooks changed.\n     * @event Client#webhooksUpdate\n     * @param {TextChannel|NewsChannel|VoiceChannel|StageChannel|ForumChannel} channel\n     * The channel that had a webhook update\n     */\n    client.emit('webhooksUpdate', channel);\n\n    /**\n     * Emitted whenever a channel has its webhooks changed.\n     * @event Client#webhookUpdate\n     * @param {TextChannel|NewsChannel|VoiceChannel|StageChannel|ForumChannel} channel\n     * The channel that had a webhook update\n     * @deprecated Use {@link Client#event:webhooksUpdate} instead.\n     */\n    if (client.emit('webhookUpdate', channel) && !deprecationEmitted) {\n      deprecationEmitted = true;\n      process.emitWarning('The webhookUpdate event is deprecated. Use webhooksUpdate instead.', 'DeprecationWarning');\n    }\n  }\n}\nmodule.exports = WebhooksUpdate;","map":{"version":3,"names":["process","require","Action","deprecationEmitted","WebhooksUpdate","handle","data","client","channel","channels","cache","get","channel_id","emit","emitWarning","module","exports"],"sources":["C:/Users/hetit/node_modules/discord.js/src/client/actions/WebhooksUpdate.js"],"sourcesContent":["'use strict';\n\nconst process = require('node:process');\nconst Action = require('./Action');\n\nlet deprecationEmitted = false;\n\nclass WebhooksUpdate extends Action {\n  handle(data) {\n    const client = this.client;\n    const channel = client.channels.cache.get(data.channel_id);\n    if (!channel) return;\n\n    // TODO: change to Events.WebhooksUpdate in the next major version\n    /**\n     * Emitted whenever a channel has its webhooks changed.\n     * @event Client#webhooksUpdate\n     * @param {TextChannel|NewsChannel|VoiceChannel|StageChannel|ForumChannel} channel\n     * The channel that had a webhook update\n     */\n    client.emit('webhooksUpdate', channel);\n\n    /**\n     * Emitted whenever a channel has its webhooks changed.\n     * @event Client#webhookUpdate\n     * @param {TextChannel|NewsChannel|VoiceChannel|StageChannel|ForumChannel} channel\n     * The channel that had a webhook update\n     * @deprecated Use {@link Client#event:webhooksUpdate} instead.\n     */\n    if (client.emit('webhookUpdate', channel) && !deprecationEmitted) {\n      deprecationEmitted = true;\n      process.emitWarning('The webhookUpdate event is deprecated. Use webhooksUpdate instead.', 'DeprecationWarning');\n    }\n  }\n}\n\nmodule.exports = WebhooksUpdate;\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,OAAO,GAAGC,OAAO,CAAC,cAAc,CAAC;AACvC,MAAMC,MAAM,GAAGD,OAAO,CAAC,UAAU,CAAC;AAElC,IAAIE,kBAAkB,GAAG,KAAK;AAE9B,MAAMC,cAAc,SAASF,MAAM,CAAC;EAClCG,MAAMA,CAACC,IAAI,EAAE;IACX,MAAMC,MAAM,GAAG,IAAI,CAACA,MAAM;IAC1B,MAAMC,OAAO,GAAGD,MAAM,CAACE,QAAQ,CAACC,KAAK,CAACC,GAAG,CAACL,IAAI,CAACM,UAAU,CAAC;IAC1D,IAAI,CAACJ,OAAO,EAAE;;IAEd;IACA;AACJ;AACA;AACA;AACA;AACA;IACID,MAAM,CAACM,IAAI,CAAC,gBAAgB,EAAEL,OAAO,CAAC;;IAEtC;AACJ;AACA;AACA;AACA;AACA;AACA;IACI,IAAID,MAAM,CAACM,IAAI,CAAC,eAAe,EAAEL,OAAO,CAAC,IAAI,CAACL,kBAAkB,EAAE;MAChEA,kBAAkB,GAAG,IAAI;MACzBH,OAAO,CAACc,WAAW,CAAC,oEAAoE,EAAE,oBAAoB,CAAC;IACjH;EACF;AACF;AAEAC,MAAM,CAACC,OAAO,GAAGZ,cAAc","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}