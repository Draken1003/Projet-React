{"ast":null,"code":"'use strict';\n\nconst {\n  deprecate\n} = require('node:util');\nconst {\n  isJSONEncodable\n} = require('@discordjs/util');\nconst Component = require('./Component');\nconst {\n  createComponent\n} = require('../util/Components');\n\n/**\n * Represents an action row\n * @extends {Component}\n */\nclass ActionRow extends Component {\n  constructor({\n    components,\n    ...data\n  }) {\n    super(data);\n\n    /**\n     * The components in this action row\n     * @type {Component[]}\n     * @readonly\n     */\n    this.components = components.map(c => createComponent(c));\n  }\n\n  /**\n   * Creates a new action row builder from JSON data\n   * @method from\n   * @memberof ActionRow\n   * @param {ActionRowBuilder|ActionRow|APIActionRowComponent} other The other data\n   * @returns {ActionRowBuilder}\n   * @deprecated Use {@link ActionRowBuilder.from} instead.\n   */\n  static from = deprecate(other => new this(isJSONEncodable(other) ? other.toJSON() : other), 'ActionRow.from() is deprecated. Use ActionRowBuilder.from() instead.');\n\n  /**\n   * Returns the API-compatible JSON for this component\n   * @returns {APIActionRowComponent}\n   */\n  toJSON() {\n    return {\n      ...this.data,\n      components: this.components.map(c => c.toJSON())\n    };\n  }\n}\nmodule.exports = ActionRow;","map":{"version":3,"names":["deprecate","require","isJSONEncodable","Component","createComponent","ActionRow","constructor","components","data","map","c","from","other","toJSON","module","exports"],"sources":["C:/Users/hetit/node_modules/discord.js/src/structures/ActionRow.js"],"sourcesContent":["'use strict';\n\nconst { deprecate } = require('node:util');\nconst { isJSONEncodable } = require('@discordjs/util');\nconst Component = require('./Component');\nconst { createComponent } = require('../util/Components');\n\n/**\n * Represents an action row\n * @extends {Component}\n */\nclass ActionRow extends Component {\n  constructor({ components, ...data }) {\n    super(data);\n\n    /**\n     * The components in this action row\n     * @type {Component[]}\n     * @readonly\n     */\n    this.components = components.map(c => createComponent(c));\n  }\n\n  /**\n   * Creates a new action row builder from JSON data\n   * @method from\n   * @memberof ActionRow\n   * @param {ActionRowBuilder|ActionRow|APIActionRowComponent} other The other data\n   * @returns {ActionRowBuilder}\n   * @deprecated Use {@link ActionRowBuilder.from} instead.\n   */\n  static from = deprecate(\n    other => new this(isJSONEncodable(other) ? other.toJSON() : other),\n    'ActionRow.from() is deprecated. Use ActionRowBuilder.from() instead.',\n  );\n\n  /**\n   * Returns the API-compatible JSON for this component\n   * @returns {APIActionRowComponent}\n   */\n  toJSON() {\n    return { ...this.data, components: this.components.map(c => c.toJSON()) };\n  }\n}\n\nmodule.exports = ActionRow;\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAM;EAAEA;AAAU,CAAC,GAAGC,OAAO,CAAC,WAAW,CAAC;AAC1C,MAAM;EAAEC;AAAgB,CAAC,GAAGD,OAAO,CAAC,iBAAiB,CAAC;AACtD,MAAME,SAAS,GAAGF,OAAO,CAAC,aAAa,CAAC;AACxC,MAAM;EAAEG;AAAgB,CAAC,GAAGH,OAAO,CAAC,oBAAoB,CAAC;;AAEzD;AACA;AACA;AACA;AACA,MAAMI,SAAS,SAASF,SAAS,CAAC;EAChCG,WAAWA,CAAC;IAAEC,UAAU;IAAE,GAAGC;EAAK,CAAC,EAAE;IACnC,KAAK,CAACA,IAAI,CAAC;;IAEX;AACJ;AACA;AACA;AACA;IACI,IAAI,CAACD,UAAU,GAAGA,UAAU,CAACE,GAAG,CAACC,CAAC,IAAIN,eAAe,CAACM,CAAC,CAAC,CAAC;EAC3D;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACE,OAAOC,IAAI,GAAGX,SAAS,CACrBY,KAAK,IAAI,IAAI,IAAI,CAACV,eAAe,CAACU,KAAK,CAAC,GAAGA,KAAK,CAACC,MAAM,CAAC,CAAC,GAAGD,KAAK,CAAC,EAClE,sEACF,CAAC;;EAED;AACF;AACA;AACA;EACEC,MAAMA,CAAA,EAAG;IACP,OAAO;MAAE,GAAG,IAAI,CAACL,IAAI;MAAED,UAAU,EAAE,IAAI,CAACA,UAAU,CAACE,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACG,MAAM,CAAC,CAAC;IAAE,CAAC;EAC3E;AACF;AAEAC,MAAM,CAACC,OAAO,GAAGV,SAAS","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}