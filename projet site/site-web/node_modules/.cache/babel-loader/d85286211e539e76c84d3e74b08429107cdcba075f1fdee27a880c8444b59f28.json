{"ast":null,"code":"\"use strict\";\n\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value) => __defProp(target, \"name\", {\n  value,\n  configurable: true\n});\nvar __export = (target, all) => {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from)) if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n      get: () => from[key],\n      enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n    });\n  }\n  return to;\n};\nvar __toCommonJS = mod => __copyProps(__defProp({}, \"__esModule\", {\n  value: true\n}), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  calculateShardId: () => calculateShardId,\n  getUserAgentAppendix: () => getUserAgentAppendix,\n  isEquatable: () => isEquatable,\n  isJSONEncodable: () => isJSONEncodable,\n  lazy: () => lazy,\n  range: () => range,\n  shouldUseGlobalFetchAndWebSocket: () => shouldUseGlobalFetchAndWebSocket\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/functions/lazy.ts\nfunction lazy(cb) {\n  let defaultValue;\n  return () => defaultValue ??= cb();\n}\n__name(lazy, \"lazy\");\n\n// src/functions/range.ts\nfunction* range(range2) {\n  let rangeEnd;\n  let start = 0;\n  let step = 1;\n  if (typeof range2 === \"number\") {\n    rangeEnd = range2;\n  } else {\n    start = range2.start;\n    rangeEnd = range2.end;\n    step = range2.step ?? 1;\n  }\n  for (let index = start; index < rangeEnd; index += step) {\n    yield index;\n  }\n}\n__name(range, \"range\");\n\n// src/functions/calculateShardId.ts\nfunction calculateShardId(guildId, shardCount) {\n  return Number(BigInt(guildId) >> 22n) % shardCount;\n}\n__name(calculateShardId, \"calculateShardId\");\n\n// src/functions/runtime.ts\nfunction shouldUseGlobalFetchAndWebSocket() {\n  if (typeof globalThis.process === \"undefined\") {\n    return \"fetch\" in globalThis && \"WebSocket\" in globalThis;\n  }\n  if (\"versions\" in globalThis.process) {\n    return \"deno\" in globalThis.process.versions || \"bun\" in globalThis.process.versions;\n  }\n  return false;\n}\n__name(shouldUseGlobalFetchAndWebSocket, \"shouldUseGlobalFetchAndWebSocket\");\n\n// src/functions/userAgentAppendix.ts\nfunction getUserAgentAppendix() {\n  if (typeof globalThis.EdgeRuntime !== \"undefined\") {\n    return \"Vercel-Edge-Functions\";\n  }\n  if (typeof globalThis.R2 !== \"undefined\" && typeof globalThis.WebSocketPair !== \"undefined\") {\n    return \"Cloudflare-Workers\";\n  }\n  if (typeof globalThis.Netlify !== \"undefined\") {\n    return \"Netlify-Edge-Functions\";\n  }\n  if (typeof globalThis.process !== \"object\") {\n    if (typeof globalThis.navigator === \"object\") {\n      return globalThis.navigator.userAgent;\n    }\n    return \"UnknownEnvironment\";\n  }\n  if (\"versions\" in globalThis.process) {\n    if (\"deno\" in globalThis.process.versions) {\n      return `Deno/${globalThis.process.versions.deno}`;\n    }\n    if (\"bun\" in globalThis.process.versions) {\n      return `Bun/${globalThis.process.versions.bun}`;\n    }\n    if (\"node\" in globalThis.process.versions) {\n      return `Node.js/${globalThis.process.versions.node}`;\n    }\n  }\n  return \"UnknownEnvironment\";\n}\n__name(getUserAgentAppendix, \"getUserAgentAppendix\");\n\n// src/JSONEncodable.ts\nfunction isJSONEncodable(maybeEncodable) {\n  return maybeEncodable !== null && typeof maybeEncodable === \"object\" && \"toJSON\" in maybeEncodable;\n}\n__name(isJSONEncodable, \"isJSONEncodable\");\n\n// src/Equatable.ts\nfunction isEquatable(maybeEquatable) {\n  return maybeEquatable !== null && typeof maybeEquatable === \"object\" && \"equals\" in maybeEquatable;\n}\n__name(isEquatable, \"isEquatable\");\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  calculateShardId,\n  getUserAgentAppendix,\n  isEquatable,\n  isJSONEncodable,\n  lazy,\n  range,\n  shouldUseGlobalFetchAndWebSocket\n});","map":{"version":3,"names":["src_exports","__export","calculateShardId","getUserAgentAppendix","isEquatable","isJSONEncodable","lazy","range","shouldUseGlobalFetchAndWebSocket","module","exports","__toCommonJS","cb","defaultValue","__name","range2","rangeEnd","start","step","end","index","guildId","shardCount","Number","BigInt","globalThis","process","versions","EdgeRuntime","R2","WebSocketPair","Netlify","navigator","userAgent","deno","bun","node","maybeEncodable","maybeEquatable"],"sources":["C:\\Users\\hetit\\node_modules\\@discordjs\\util\\src\\index.ts","C:\\Users\\hetit\\node_modules\\@discordjs\\util\\src\\functions\\lazy.ts","C:\\Users\\hetit\\node_modules\\@discordjs\\util\\src\\functions\\range.ts","C:\\Users\\hetit\\node_modules\\@discordjs\\util\\src\\functions\\calculateShardId.ts","C:\\Users\\hetit\\node_modules\\@discordjs\\util\\src\\functions\\runtime.ts","C:\\Users\\hetit\\node_modules\\@discordjs\\util\\src\\functions\\userAgentAppendix.ts","C:\\Users\\hetit\\node_modules\\@discordjs\\util\\src\\JSONEncodable.ts","C:\\Users\\hetit\\node_modules\\@discordjs\\util\\src\\Equatable.ts"],"sourcesContent":["export * from './types.js';\nexport * from './functions/index.js';\nexport * from './JSONEncodable.js';\nexport * from './Equatable.js';\n","/**\n * Lazy is a wrapper around a value that is computed lazily. It is useful for\n * cases where the value is expensive to compute and the computation may not\n * be needed at all.\n *\n * @param cb - The callback to lazily evaluate\n * @typeParam T - The type of the value\n * @example\n * ```ts\n * const value = lazy(() => computeExpensiveValue());\n * ```\n */\n// eslint-disable-next-line promise/prefer-await-to-callbacks\nexport function lazy<T>(cb: () => T): () => T {\n\tlet defaultValue: T;\n\t// eslint-disable-next-line promise/prefer-await-to-callbacks\n\treturn () => (defaultValue ??= cb());\n}\n","/**\n * Options for creating a range\n */\nexport interface RangeOptions {\n\t/**\n\t * The end of the range (exclusive)\n\t */\n\tend: number;\n\t/**\n\t * The start of the range (inclusive)\n\t */\n\tstart: number;\n\t/**\n\t * The amount to increment by\n\t *\n\t * @defaultValue `1`\n\t */\n\tstep?: number;\n}\n\n/**\n * A generator to yield numbers in a given range\n *\n * @remarks\n * This method is end-exclusive, for example the last number yielded by `range(5)` is 4. If you\n * prefer for the end to be included add 1 to the range or `end` option.\n * @param range - A number representing the the range to yield (exclusive) or an object with start, end and step\n * @example\n * Basic range\n * ```ts\n * for (const number of range(5)) {\n *  console.log(number);\n * }\n * // Prints 0, 1, 2, 3, 4\n * ```\n * @example\n * Range with a step\n * ```ts\n * for (const number of range({ start: 3, end: 10, step: 2 })) {\n * \tconsole.log(number);\n * }\n * // Prints 3, 5, 7, 9\n * ```\n */\nexport function* range(range: RangeOptions | number) {\n\tlet rangeEnd: number;\n\tlet start = 0;\n\tlet step = 1;\n\n\tif (typeof range === 'number') {\n\t\trangeEnd = range;\n\t} else {\n\t\tstart = range.start;\n\t\trangeEnd = range.end;\n\t\tstep = range.step ?? 1;\n\t}\n\n\tfor (let index = start; index < rangeEnd; index += step) {\n\t\tyield index;\n\t}\n}\n","/**\n * Calculates the shard id for a given guild id.\n *\n * @param guildId - The guild id to calculate the shard id for\n * @param shardCount - The total number of shards\n */\nexport function calculateShardId(guildId: string, shardCount: number) {\n\treturn Number(BigInt(guildId) >> 22n) % shardCount;\n}\n","export function shouldUseGlobalFetchAndWebSocket() {\n\t// Browser env and deno when ran directly\n\tif (typeof globalThis.process === 'undefined') {\n\t\treturn 'fetch' in globalThis && 'WebSocket' in globalThis;\n\t}\n\n\tif ('versions' in globalThis.process) {\n\t\treturn 'deno' in globalThis.process.versions || 'bun' in globalThis.process.versions;\n\t}\n\n\treturn false;\n}\n","/* eslint-disable n/prefer-global/process */\n/* eslint-disable no-restricted-globals */\n\n/**\n * Resolves the user agent appendix string for the current environment.\n */\nexport function getUserAgentAppendix(): string {\n\t// https://vercel.com/docs/concepts/functions/edge-functions/edge-runtime#check-if-you're-running-on-the-edge-runtime\n\t// @ts-expect-error Vercel Edge functions\n\tif (typeof globalThis.EdgeRuntime !== 'undefined') {\n\t\treturn 'Vercel-Edge-Functions';\n\t}\n\n\t// @ts-expect-error Cloudflare Workers\n\tif (typeof globalThis.R2 !== 'undefined' && typeof globalThis.WebSocketPair !== 'undefined') {\n\t\t// https://developers.cloudflare.com/workers/runtime-apis/web-standards/#navigatoruseragent\n\t\treturn 'Cloudflare-Workers';\n\t}\n\n\t// https://docs.netlify.com/edge-functions/api/#netlify-global-object\n\t// @ts-expect-error Netlify Edge functions\n\tif (typeof globalThis.Netlify !== 'undefined') {\n\t\treturn 'Netlify-Edge-Functions';\n\t}\n\n\t// Most (if not all) edge environments will have `process` defined. Within a web browser we'll extract it using `navigator.userAgent`.\n\tif (typeof globalThis.process !== 'object') {\n\t\t// @ts-expect-error web env\n\t\tif (typeof globalThis.navigator === 'object') {\n\t\t\t// @ts-expect-error web env\n\t\t\treturn globalThis.navigator.userAgent;\n\t\t}\n\n\t\treturn 'UnknownEnvironment';\n\t}\n\n\tif ('versions' in globalThis.process) {\n\t\tif ('deno' in globalThis.process.versions) {\n\t\t\treturn `Deno/${globalThis.process.versions.deno}`;\n\t\t}\n\n\t\tif ('bun' in globalThis.process.versions) {\n\t\t\treturn `Bun/${globalThis.process.versions.bun}`;\n\t\t}\n\n\t\tif ('node' in globalThis.process.versions) {\n\t\t\treturn `Node.js/${globalThis.process.versions.node}`;\n\t\t}\n\t}\n\n\treturn 'UnknownEnvironment';\n}\n","/**\n * Represents an object capable of representing itself as a JSON object\n *\n * @typeParam T - The JSON type corresponding to {@link JSONEncodable.toJSON} outputs.\n */\nexport interface JSONEncodable<T> {\n\t/**\n\t * Transforms this object to its JSON format\n\t */\n\ttoJSON(): T;\n}\n\n/**\n * Indicates if an object is encodable or not.\n *\n * @param maybeEncodable - The object to check against\n */\nexport function isJSONEncodable(maybeEncodable: unknown): maybeEncodable is JSONEncodable<unknown> {\n\treturn maybeEncodable !== null && typeof maybeEncodable === 'object' && 'toJSON' in maybeEncodable;\n}\n","/**\n * Represents a structure that can be checked against another\n * given structure for equality\n *\n * @typeParam T - The type of object to compare the current object to\n */\nexport interface Equatable<T> {\n\t/**\n\t * Whether or not this is equal to another structure\n\t */\n\tequals(other: T): boolean;\n}\n\n/**\n * Indicates if an object is equatable or not.\n *\n * @param maybeEquatable - The object to check against\n */\nexport function isEquatable(maybeEquatable: unknown): maybeEquatable is Equatable<unknown> {\n\treturn maybeEquatable !== null && typeof maybeEquatable === 'object' && 'equals' in maybeEquatable;\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAAA,WAAA;AAAAC,QAAA,CAAAD,WAAA;EAAAE,gBAAA,EAAAA,CAAA,KAAAA,gBAAA;EAAAC,oBAAA,EAAAA,CAAA,KAAAA,oBAAA;EAAAC,WAAA,EAAAA,CAAA,KAAAA,WAAA;EAAAC,eAAA,EAAAA,CAAA,KAAAA,eAAA;EAAAC,IAAA,EAAAA,CAAA,KAAAA,IAAA;EAAAC,KAAA,EAAAA,CAAA,KAAAA,KAAA;EAAAC,gCAAA,EAAAA,CAAA,KAAAA;AAAA;AAAAC,MAAA,CAAAC,OAAA,GAAAC,YAAA,CAAAX,WAAA;;;ACaO,SAASM,KAAQM,EAAA,EAAsB;EAC7C,IAAIC,YAAA;EAEJ,OAAO,MAAOA,YAAA,KAAiBD,EAAA,CAAG;AACnC;AAJgBE,MAAA,CAAAR,IAAA;;;AC+BT,UAAUC,MAAMQ,MAAA,EAA8B;EACpD,IAAIC,QAAA;EACJ,IAAIC,KAAA,GAAQ;EACZ,IAAIC,IAAA,GAAO;EAEX,IAAI,OAAOH,MAAA,KAAU,UAAU;IAC9BC,QAAA,GAAWD,MAAA;EACZ,OAAO;IACNE,KAAA,GAAQF,MAAA,CAAME,KAAA;IACdD,QAAA,GAAWD,MAAA,CAAMI,GAAA;IACjBD,IAAA,GAAOH,MAAA,CAAMG,IAAA,IAAQ;EACtB;EAEA,SAASE,KAAA,GAAQH,KAAA,EAAOG,KAAA,GAAQJ,QAAA,EAAUI,KAAA,IAASF,IAAA,EAAM;IACxD,MAAME,KAAA;EACP;AACD;AAhBiBN,MAAA,CAAAP,KAAA;;;ACtCV,SAASL,iBAAiBmB,OAAA,EAAiBC,UAAA,EAAoB;EACrE,OAAOC,MAAA,CAAOC,MAAA,CAAOH,OAAO,KAAK,GAAG,IAAIC,UAAA;AACzC;AAFgBR,MAAA,CAAAZ,gBAAA;;;ACNT,SAASM,iCAAA,EAAmC;EAElD,IAAI,OAAOiB,UAAA,CAAWC,OAAA,KAAY,aAAa;IAC9C,OAAO,WAAWD,UAAA,IAAc,eAAeA,UAAA;EAChD;EAEA,IAAI,cAAcA,UAAA,CAAWC,OAAA,EAAS;IACrC,OAAO,UAAUD,UAAA,CAAWC,OAAA,CAAQC,QAAA,IAAY,SAASF,UAAA,CAAWC,OAAA,CAAQC,QAAA;EAC7E;EAEA,OAAO;AACR;AAXgBb,MAAA,CAAAN,gCAAA;;;ACMT,SAASL,qBAAA,EAA+B;EAG9C,IAAI,OAAOsB,UAAA,CAAWG,WAAA,KAAgB,aAAa;IAClD,OAAO;EACR;EAGA,IAAI,OAAOH,UAAA,CAAWI,EAAA,KAAO,eAAe,OAAOJ,UAAA,CAAWK,aAAA,KAAkB,aAAa;IAE5F,OAAO;EACR;EAIA,IAAI,OAAOL,UAAA,CAAWM,OAAA,KAAY,aAAa;IAC9C,OAAO;EACR;EAGA,IAAI,OAAON,UAAA,CAAWC,OAAA,KAAY,UAAU;IAE3C,IAAI,OAAOD,UAAA,CAAWO,SAAA,KAAc,UAAU;MAE7C,OAAOP,UAAA,CAAWO,SAAA,CAAUC,SAAA;IAC7B;IAEA,OAAO;EACR;EAEA,IAAI,cAAcR,UAAA,CAAWC,OAAA,EAAS;IACrC,IAAI,UAAUD,UAAA,CAAWC,OAAA,CAAQC,QAAA,EAAU;MAC1C,OAAO,QAAQF,UAAA,CAAWC,OAAA,CAAQC,QAAA,CAASO,IAAI;IAChD;IAEA,IAAI,SAAST,UAAA,CAAWC,OAAA,CAAQC,QAAA,EAAU;MACzC,OAAO,OAAOF,UAAA,CAAWC,OAAA,CAAQC,QAAA,CAASQ,GAAG;IAC9C;IAEA,IAAI,UAAUV,UAAA,CAAWC,OAAA,CAAQC,QAAA,EAAU;MAC1C,OAAO,WAAWF,UAAA,CAAWC,OAAA,CAAQC,QAAA,CAASS,IAAI;IACnD;EACD;EAEA,OAAO;AACR;AA7CgBtB,MAAA,CAAAX,oBAAA;;;ACWT,SAASE,gBAAgBgC,cAAA,EAAmE;EAClG,OAAOA,cAAA,KAAmB,QAAQ,OAAOA,cAAA,KAAmB,YAAY,YAAYA,cAAA;AACrF;AAFgBvB,MAAA,CAAAT,eAAA;;;ACCT,SAASD,YAAYkC,cAAA,EAA+D;EAC1F,OAAOA,cAAA,KAAmB,QAAQ,OAAOA,cAAA,KAAmB,YAAY,YAAYA,cAAA;AACrF;AAFgBxB,MAAA,CAAAV,WAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}