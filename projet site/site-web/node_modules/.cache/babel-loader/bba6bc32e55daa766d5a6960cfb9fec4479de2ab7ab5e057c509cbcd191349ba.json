{"ast":null,"code":"'use strict';\n\nconst EventEmitter = require('node:events');\nconst {\n  REST\n} = require('@discordjs/rest');\nconst {\n  DiscordjsTypeError,\n  ErrorCodes\n} = require('../errors');\nconst Options = require('../util/Options');\nconst {\n  mergeDefault,\n  flatten\n} = require('../util/Util');\n\n/**\n * The base class for all clients.\n * @extends {EventEmitter}\n */\nclass BaseClient extends EventEmitter {\n  constructor(options = {}) {\n    super({\n      captureRejections: true\n    });\n    if (typeof options !== 'object' || options === null) {\n      throw new DiscordjsTypeError(ErrorCodes.InvalidType, 'options', 'object', true);\n    }\n\n    /**\n     * The options the client was instantiated with\n     * @type {ClientOptions}\n     */\n    this.options = mergeDefault(Options.createDefault(), {\n      ...options,\n      rest: {\n        ...options.rest,\n        userAgentAppendix: options.rest?.userAgentAppendix ? `${Options.userAgentAppendix} ${options.rest.userAgentAppendix}` : undefined\n      }\n    });\n\n    /**\n     * The REST manager of the client\n     * @type {REST}\n     */\n    this.rest = new REST(this.options.rest);\n  }\n\n  /**\n   * Destroys all assets used by the base client.\n   * @returns {void}\n   */\n  destroy() {\n    this.rest.clearHashSweeper();\n    this.rest.clearHandlerSweeper();\n  }\n\n  /**\n   * Increments max listeners by one, if they are not zero.\n   * @private\n   */\n  incrementMaxListeners() {\n    const maxListeners = this.getMaxListeners();\n    if (maxListeners !== 0) {\n      this.setMaxListeners(maxListeners + 1);\n    }\n  }\n\n  /**\n   * Decrements max listeners by one, if they are not zero.\n   * @private\n   */\n  decrementMaxListeners() {\n    const maxListeners = this.getMaxListeners();\n    if (maxListeners !== 0) {\n      this.setMaxListeners(maxListeners - 1);\n    }\n  }\n  toJSON(...props) {\n    return flatten(this, ...props);\n  }\n}\nmodule.exports = BaseClient;\n\n/**\n * @external REST\n * @see {@link https://discord.js.org/docs/packages/rest/stable/REST:Class}\n */","map":{"version":3,"names":["EventEmitter","require","REST","DiscordjsTypeError","ErrorCodes","Options","mergeDefault","flatten","BaseClient","constructor","options","captureRejections","InvalidType","createDefault","rest","userAgentAppendix","undefined","destroy","clearHashSweeper","clearHandlerSweeper","incrementMaxListeners","maxListeners","getMaxListeners","setMaxListeners","decrementMaxListeners","toJSON","props","module","exports"],"sources":["C:/Users/hetit/node_modules/discord.js/src/client/BaseClient.js"],"sourcesContent":["'use strict';\n\nconst EventEmitter = require('node:events');\nconst { REST } = require('@discordjs/rest');\nconst { DiscordjsTypeError, ErrorCodes } = require('../errors');\nconst Options = require('../util/Options');\nconst { mergeDefault, flatten } = require('../util/Util');\n\n/**\n * The base class for all clients.\n * @extends {EventEmitter}\n */\nclass BaseClient extends EventEmitter {\n  constructor(options = {}) {\n    super({ captureRejections: true });\n\n    if (typeof options !== 'object' || options === null) {\n      throw new DiscordjsTypeError(ErrorCodes.InvalidType, 'options', 'object', true);\n    }\n\n    /**\n     * The options the client was instantiated with\n     * @type {ClientOptions}\n     */\n    this.options = mergeDefault(Options.createDefault(), {\n      ...options,\n      rest: {\n        ...options.rest,\n        userAgentAppendix: options.rest?.userAgentAppendix\n          ? `${Options.userAgentAppendix} ${options.rest.userAgentAppendix}`\n          : undefined,\n      },\n    });\n\n    /**\n     * The REST manager of the client\n     * @type {REST}\n     */\n    this.rest = new REST(this.options.rest);\n  }\n\n  /**\n   * Destroys all assets used by the base client.\n   * @returns {void}\n   */\n  destroy() {\n    this.rest.clearHashSweeper();\n    this.rest.clearHandlerSweeper();\n  }\n\n  /**\n   * Increments max listeners by one, if they are not zero.\n   * @private\n   */\n  incrementMaxListeners() {\n    const maxListeners = this.getMaxListeners();\n    if (maxListeners !== 0) {\n      this.setMaxListeners(maxListeners + 1);\n    }\n  }\n\n  /**\n   * Decrements max listeners by one, if they are not zero.\n   * @private\n   */\n  decrementMaxListeners() {\n    const maxListeners = this.getMaxListeners();\n    if (maxListeners !== 0) {\n      this.setMaxListeners(maxListeners - 1);\n    }\n  }\n\n  toJSON(...props) {\n    return flatten(this, ...props);\n  }\n}\n\nmodule.exports = BaseClient;\n\n/**\n * @external REST\n * @see {@link https://discord.js.org/docs/packages/rest/stable/REST:Class}\n */\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,YAAY,GAAGC,OAAO,CAAC,aAAa,CAAC;AAC3C,MAAM;EAAEC;AAAK,CAAC,GAAGD,OAAO,CAAC,iBAAiB,CAAC;AAC3C,MAAM;EAAEE,kBAAkB;EAAEC;AAAW,CAAC,GAAGH,OAAO,CAAC,WAAW,CAAC;AAC/D,MAAMI,OAAO,GAAGJ,OAAO,CAAC,iBAAiB,CAAC;AAC1C,MAAM;EAAEK,YAAY;EAAEC;AAAQ,CAAC,GAAGN,OAAO,CAAC,cAAc,CAAC;;AAEzD;AACA;AACA;AACA;AACA,MAAMO,UAAU,SAASR,YAAY,CAAC;EACpCS,WAAWA,CAACC,OAAO,GAAG,CAAC,CAAC,EAAE;IACxB,KAAK,CAAC;MAAEC,iBAAiB,EAAE;IAAK,CAAC,CAAC;IAElC,IAAI,OAAOD,OAAO,KAAK,QAAQ,IAAIA,OAAO,KAAK,IAAI,EAAE;MACnD,MAAM,IAAIP,kBAAkB,CAACC,UAAU,CAACQ,WAAW,EAAE,SAAS,EAAE,QAAQ,EAAE,IAAI,CAAC;IACjF;;IAEA;AACJ;AACA;AACA;IACI,IAAI,CAACF,OAAO,GAAGJ,YAAY,CAACD,OAAO,CAACQ,aAAa,CAAC,CAAC,EAAE;MACnD,GAAGH,OAAO;MACVI,IAAI,EAAE;QACJ,GAAGJ,OAAO,CAACI,IAAI;QACfC,iBAAiB,EAAEL,OAAO,CAACI,IAAI,EAAEC,iBAAiB,GAC9C,GAAGV,OAAO,CAACU,iBAAiB,IAAIL,OAAO,CAACI,IAAI,CAACC,iBAAiB,EAAE,GAChEC;MACN;IACF,CAAC,CAAC;;IAEF;AACJ;AACA;AACA;IACI,IAAI,CAACF,IAAI,GAAG,IAAIZ,IAAI,CAAC,IAAI,CAACQ,OAAO,CAACI,IAAI,CAAC;EACzC;;EAEA;AACF;AACA;AACA;EACEG,OAAOA,CAAA,EAAG;IACR,IAAI,CAACH,IAAI,CAACI,gBAAgB,CAAC,CAAC;IAC5B,IAAI,CAACJ,IAAI,CAACK,mBAAmB,CAAC,CAAC;EACjC;;EAEA;AACF;AACA;AACA;EACEC,qBAAqBA,CAAA,EAAG;IACtB,MAAMC,YAAY,GAAG,IAAI,CAACC,eAAe,CAAC,CAAC;IAC3C,IAAID,YAAY,KAAK,CAAC,EAAE;MACtB,IAAI,CAACE,eAAe,CAACF,YAAY,GAAG,CAAC,CAAC;IACxC;EACF;;EAEA;AACF;AACA;AACA;EACEG,qBAAqBA,CAAA,EAAG;IACtB,MAAMH,YAAY,GAAG,IAAI,CAACC,eAAe,CAAC,CAAC;IAC3C,IAAID,YAAY,KAAK,CAAC,EAAE;MACtB,IAAI,CAACE,eAAe,CAACF,YAAY,GAAG,CAAC,CAAC;IACxC;EACF;EAEAI,MAAMA,CAAC,GAAGC,KAAK,EAAE;IACf,OAAOnB,OAAO,CAAC,IAAI,EAAE,GAAGmB,KAAK,CAAC;EAChC;AACF;AAEAC,MAAM,CAACC,OAAO,GAAGpB,UAAU;;AAE3B;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}