{"ast":null,"code":"'use strict';\n\nconst {\n  ActionRowBuilder: BuildersActionRow\n} = require('@discordjs/builders');\nconst {\n  isJSONEncodable\n} = require('@discordjs/util');\nconst {\n  createComponentBuilder\n} = require('../util/Components');\nconst {\n  toSnakeCase\n} = require('../util/Transformers');\n\n/**\n * Represents an action row builder.\n * @extends {BuildersActionRow}\n */\nclass ActionRowBuilder extends BuildersActionRow {\n  constructor({\n    components,\n    ...data\n  } = {}) {\n    super({\n      ...toSnakeCase(data),\n      components: components?.map(c => createComponentBuilder(c))\n    });\n  }\n\n  /**\n   * Creates a new action row builder from JSON data\n   * @param {ActionRow|ActionRowBuilder|APIActionRowComponent} other The other data\n   * @returns {ActionRowBuilder}\n   */\n  static from(other) {\n    return new this(isJSONEncodable(other) ? other.toJSON() : other);\n  }\n}\nmodule.exports = ActionRowBuilder;\n\n/**\n * @external BuildersActionRow\n * @see {@link https://discord.js.org/docs/packages/builders/stable/ActionRowBuilder:Class}\n */","map":{"version":3,"names":["ActionRowBuilder","BuildersActionRow","require","isJSONEncodable","createComponentBuilder","toSnakeCase","constructor","components","data","map","c","from","other","toJSON","module","exports"],"sources":["C:/Users/hetit/node_modules/discord.js/src/structures/ActionRowBuilder.js"],"sourcesContent":["'use strict';\n\nconst { ActionRowBuilder: BuildersActionRow } = require('@discordjs/builders');\nconst { isJSONEncodable } = require('@discordjs/util');\nconst { createComponentBuilder } = require('../util/Components');\nconst { toSnakeCase } = require('../util/Transformers');\n\n/**\n * Represents an action row builder.\n * @extends {BuildersActionRow}\n */\nclass ActionRowBuilder extends BuildersActionRow {\n  constructor({ components, ...data } = {}) {\n    super({\n      ...toSnakeCase(data),\n      components: components?.map(c => createComponentBuilder(c)),\n    });\n  }\n\n  /**\n   * Creates a new action row builder from JSON data\n   * @param {ActionRow|ActionRowBuilder|APIActionRowComponent} other The other data\n   * @returns {ActionRowBuilder}\n   */\n  static from(other) {\n    return new this(isJSONEncodable(other) ? other.toJSON() : other);\n  }\n}\n\nmodule.exports = ActionRowBuilder;\n\n/**\n * @external BuildersActionRow\n * @see {@link https://discord.js.org/docs/packages/builders/stable/ActionRowBuilder:Class}\n */\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAM;EAAEA,gBAAgB,EAAEC;AAAkB,CAAC,GAAGC,OAAO,CAAC,qBAAqB,CAAC;AAC9E,MAAM;EAAEC;AAAgB,CAAC,GAAGD,OAAO,CAAC,iBAAiB,CAAC;AACtD,MAAM;EAAEE;AAAuB,CAAC,GAAGF,OAAO,CAAC,oBAAoB,CAAC;AAChE,MAAM;EAAEG;AAAY,CAAC,GAAGH,OAAO,CAAC,sBAAsB,CAAC;;AAEvD;AACA;AACA;AACA;AACA,MAAMF,gBAAgB,SAASC,iBAAiB,CAAC;EAC/CK,WAAWA,CAAC;IAAEC,UAAU;IAAE,GAAGC;EAAK,CAAC,GAAG,CAAC,CAAC,EAAE;IACxC,KAAK,CAAC;MACJ,GAAGH,WAAW,CAACG,IAAI,CAAC;MACpBD,UAAU,EAAEA,UAAU,EAAEE,GAAG,CAACC,CAAC,IAAIN,sBAAsB,CAACM,CAAC,CAAC;IAC5D,CAAC,CAAC;EACJ;;EAEA;AACF;AACA;AACA;AACA;EACE,OAAOC,IAAIA,CAACC,KAAK,EAAE;IACjB,OAAO,IAAI,IAAI,CAACT,eAAe,CAACS,KAAK,CAAC,GAAGA,KAAK,CAACC,MAAM,CAAC,CAAC,GAAGD,KAAK,CAAC;EAClE;AACF;AAEAE,MAAM,CAACC,OAAO,GAAGf,gBAAgB;;AAEjC;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}