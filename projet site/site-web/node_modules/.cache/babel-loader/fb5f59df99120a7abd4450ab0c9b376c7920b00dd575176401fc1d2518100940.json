{"ast":null,"code":"\"use strict\";\n\n/**\n * Types extracted from https://discord.com/developers/docs/resources/auto-moderation\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AutoModerationActionType = exports.AutoModerationRuleEventType = exports.AutoModerationRuleKeywordPresetType = exports.AutoModerationRuleTriggerType = void 0;\n/**\n * https://discord.com/developers/docs/resources/auto-moderation#auto-moderation-rule-object-trigger-types\n */\nvar AutoModerationRuleTriggerType;\n(function (AutoModerationRuleTriggerType) {\n  /**\n   * Check if content contains words from a user defined list of keywords (Maximum of 6 per guild)\n   */\n  AutoModerationRuleTriggerType[AutoModerationRuleTriggerType[\"Keyword\"] = 1] = \"Keyword\";\n  /**\n   * Check if content represents generic spam (Maximum of 1 per guild)\n   */\n  AutoModerationRuleTriggerType[AutoModerationRuleTriggerType[\"Spam\"] = 3] = \"Spam\";\n  /**\n   * Check if content contains words from internal pre-defined wordsets (Maximum of 1 per guild)\n   */\n  AutoModerationRuleTriggerType[AutoModerationRuleTriggerType[\"KeywordPreset\"] = 4] = \"KeywordPreset\";\n  /**\n   * Check if content contains more mentions than allowed (Maximum of 1 per guild)\n   */\n  AutoModerationRuleTriggerType[AutoModerationRuleTriggerType[\"MentionSpam\"] = 5] = \"MentionSpam\";\n})(AutoModerationRuleTriggerType = exports.AutoModerationRuleTriggerType || (exports.AutoModerationRuleTriggerType = {}));\n/**\n * https://discord.com/developers/docs/resources/auto-moderation#auto-moderation-rule-object-keyword-preset-types\n */\nvar AutoModerationRuleKeywordPresetType;\n(function (AutoModerationRuleKeywordPresetType) {\n  /**\n   * Words that may be considered forms of swearing or cursing\n   */\n  AutoModerationRuleKeywordPresetType[AutoModerationRuleKeywordPresetType[\"Profanity\"] = 1] = \"Profanity\";\n  /**\n   * Words that refer to sexually explicit behavior or activity\n   */\n  AutoModerationRuleKeywordPresetType[AutoModerationRuleKeywordPresetType[\"SexualContent\"] = 2] = \"SexualContent\";\n  /**\n   * Personal insults or words that may be considered hate speech\n   */\n  AutoModerationRuleKeywordPresetType[AutoModerationRuleKeywordPresetType[\"Slurs\"] = 3] = \"Slurs\";\n})(AutoModerationRuleKeywordPresetType = exports.AutoModerationRuleKeywordPresetType || (exports.AutoModerationRuleKeywordPresetType = {}));\n/**\n * https://discord.com/developers/docs/resources/auto-moderation#auto-moderation-rule-object-event-types\n */\nvar AutoModerationRuleEventType;\n(function (AutoModerationRuleEventType) {\n  /**\n   * When a member sends or edits a message in the guild\n   */\n  AutoModerationRuleEventType[AutoModerationRuleEventType[\"MessageSend\"] = 1] = \"MessageSend\";\n})(AutoModerationRuleEventType = exports.AutoModerationRuleEventType || (exports.AutoModerationRuleEventType = {}));\n/**\n * https://discord.com/developers/docs/resources/auto-moderation#auto-moderation-action-object-action-types\n */\nvar AutoModerationActionType;\n(function (AutoModerationActionType) {\n  /**\n   * Blocks a member's message and prevents it from being posted.\n   * A custom explanation can be specified and shown to members whenever their message is blocked\n   */\n  AutoModerationActionType[AutoModerationActionType[\"BlockMessage\"] = 1] = \"BlockMessage\";\n  /**\n   * Logs user content to a specified channel\n   */\n  AutoModerationActionType[AutoModerationActionType[\"SendAlertMessage\"] = 2] = \"SendAlertMessage\";\n  /**\n   * Timeout user for specified duration, this action type can be set if the bot has `MODERATE_MEMBERS` permission\n   */\n  AutoModerationActionType[AutoModerationActionType[\"Timeout\"] = 3] = \"Timeout\";\n})(AutoModerationActionType = exports.AutoModerationActionType || (exports.AutoModerationActionType = {}));","map":{"version":3,"names":["AutoModerationRuleTriggerType","exports","AutoModerationRuleKeywordPresetType","AutoModerationRuleEventType","AutoModerationActionType"],"sources":["autoModeration.ts"],"sourcesContent":[null],"mappings":";;AAAA;;;;;;;AAwDA;;;AAGA,IAAYA,6BAiBX;AAjBD,WAAYA,6BAA6B;EACxC;;;EAGAA,6BAAA,CAAAA,6BAAA,4BAAW;EACX;;;EAGAA,6BAAA,CAAAA,6BAAA,sBAAQ;EACR;;;EAGAA,6BAAA,CAAAA,6BAAA,wCAAa;EACb;;;EAGAA,6BAAA,CAAAA,6BAAA,oCAAW;AACZ,CAAC,EAjBWA,6BAA6B,GAA7BC,OAAA,CAAAD,6BAA6B,KAA7BC,OAAA,CAAAD,6BAA6B;AAqEzC;;;AAGA,IAAYE,mCAaX;AAbD,WAAYA,mCAAmC;EAC9C;;;EAGAA,mCAAA,CAAAA,mCAAA,gCAAa;EACb;;;EAGAA,mCAAA,CAAAA,mCAAA,wCAAa;EACb;;;EAGAA,mCAAA,CAAAA,mCAAA,wBAAK;AACN,CAAC,EAbWA,mCAAmC,GAAnCD,OAAA,CAAAC,mCAAmC,KAAnCD,OAAA,CAAAC,mCAAmC;AAe/C;;;AAGA,IAAYC,2BAKX;AALD,WAAYA,2BAA2B;EACtC;;;EAGAA,2BAAA,CAAAA,2BAAA,oCAAe;AAChB,CAAC,EALWA,2BAA2B,GAA3BF,OAAA,CAAAE,2BAA2B,KAA3BF,OAAA,CAAAE,2BAA2B;AAuBvC;;;AAGA,IAAYC,wBAcX;AAdD,WAAYA,wBAAwB;EACnC;;;;EAIAA,wBAAA,CAAAA,wBAAA,sCAAgB;EAChB;;;EAGAA,wBAAA,CAAAA,wBAAA,8CAAgB;EAChB;;;EAGAA,wBAAA,CAAAA,wBAAA,4BAAO;AACR,CAAC,EAdWA,wBAAwB,GAAxBH,OAAA,CAAAG,wBAAwB,KAAxBH,OAAA,CAAAG,wBAAwB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}