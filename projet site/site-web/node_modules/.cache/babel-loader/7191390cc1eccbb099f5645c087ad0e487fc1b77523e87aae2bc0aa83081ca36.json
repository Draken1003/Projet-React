{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isContextMenuApplicationCommandInteraction = exports.isChatInputApplicationCommandInteraction = exports.isMessageComponentSelectMenuInteraction = exports.isMessageComponentButtonInteraction = exports.isMessageComponentInteraction = exports.isInteractionButton = exports.isLinkButton = exports.isMessageComponentGuildInteraction = exports.isMessageComponentDMInteraction = exports.isApplicationCommandGuildInteraction = exports.isApplicationCommandDMInteraction = exports.isGuildInteraction = exports.isDMInteraction = void 0;\nconst index_1 = require(\"../payloads/v10/index\");\n// Interactions\n/**\n * A type-guard check for DM interactions\n *\n * @param interaction The interaction to check against\n * @returns A boolean that indicates if the interaction was received in a DM channel\n */\nfunction isDMInteraction(interaction) {\n  return Reflect.has(interaction, 'user');\n}\nexports.isDMInteraction = isDMInteraction;\n/**\n * A type-guard check for guild interactions\n *\n * @param interaction The interaction to check against\n * @returns A boolean that indicates if the interaction was received in a guild\n */\nfunction isGuildInteraction(interaction) {\n  return Reflect.has(interaction, 'guild_id');\n}\nexports.isGuildInteraction = isGuildInteraction;\n// ApplicationCommandInteractions\n/**\n * A type-guard check for DM application command interactions\n *\n * @param interaction The application command interaction to check against\n * @returns A boolean that indicates if the application command interaction was received in a DM channel\n */\nfunction isApplicationCommandDMInteraction(interaction) {\n  return isDMInteraction(interaction);\n}\nexports.isApplicationCommandDMInteraction = isApplicationCommandDMInteraction;\n/**\n * A type-guard check for guild application command interactions\n *\n * @param interaction The interaction to check against\n * @returns A boolean that indicates if the application command interaction was received in a guild\n */\nfunction isApplicationCommandGuildInteraction(interaction) {\n  return isGuildInteraction(interaction);\n}\nexports.isApplicationCommandGuildInteraction = isApplicationCommandGuildInteraction;\n// MessageComponentInteractions\n/**\n * A type-guard check for DM message component interactions\n *\n * @param interaction The message component interaction to check against\n * @returns A boolean that indicates if the message component interaction was received in a DM channel\n */\nfunction isMessageComponentDMInteraction(interaction) {\n  return isDMInteraction(interaction);\n}\nexports.isMessageComponentDMInteraction = isMessageComponentDMInteraction;\n/**\n * A type-guard check for guild message component interactions\n *\n * @param interaction The interaction to check against\n * @returns A boolean that indicates if the message component interaction was received in a guild\n */\nfunction isMessageComponentGuildInteraction(interaction) {\n  return isGuildInteraction(interaction);\n}\nexports.isMessageComponentGuildInteraction = isMessageComponentGuildInteraction;\n// Buttons\n/**\n * A type-guard check for buttons that have a `url` attached to them.\n *\n * @param component The button to check against\n * @returns A boolean that indicates if the button has a `url` attached to it\n */\nfunction isLinkButton(component) {\n  return component.style === index_1.ButtonStyle.Link;\n}\nexports.isLinkButton = isLinkButton;\n/**\n * A type-guard check for buttons that have a `custom_id` attached to them.\n *\n * @param component The button to check against\n * @returns A boolean that indicates if the button has a `custom_id` attached to it\n */\nfunction isInteractionButton(component) {\n  return component.style !== index_1.ButtonStyle.Link;\n}\nexports.isInteractionButton = isInteractionButton;\n// Message Components\n/**\n * A type-guard check for message component interactions\n *\n * @param interaction The interaction to check against\n * @returns A boolean that indicates if the interaction is a message component\n */\nfunction isMessageComponentInteraction(interaction) {\n  return interaction.type === index_1.InteractionType.MessageComponent;\n}\nexports.isMessageComponentInteraction = isMessageComponentInteraction;\n/**\n * A type-guard check for button message component interactions\n *\n * @param interaction The message component interaction to check against\n * @returns A boolean that indicates if the message component is a button\n */\nfunction isMessageComponentButtonInteraction(interaction) {\n  return interaction.data.component_type === index_1.ComponentType.Button;\n}\nexports.isMessageComponentButtonInteraction = isMessageComponentButtonInteraction;\n/**\n * A type-guard check for select menu message component interactions\n *\n * @param interaction The message component interaction to check against\n * @returns A boolean that indicates if the message component is a select menu\n */\nfunction isMessageComponentSelectMenuInteraction(interaction) {\n  return [index_1.ComponentType.StringSelect, index_1.ComponentType.UserSelect, index_1.ComponentType.RoleSelect, index_1.ComponentType.MentionableSelect, index_1.ComponentType.ChannelSelect].includes(interaction.data.component_type);\n}\nexports.isMessageComponentSelectMenuInteraction = isMessageComponentSelectMenuInteraction;\n// Application Commands\n/**\n * A type-guard check for chat input application commands.\n *\n * @param interaction The interaction to check against\n * @returns A boolean that indicates if the interaction is a chat input application command\n */\nfunction isChatInputApplicationCommandInteraction(interaction) {\n  return interaction.data.type === index_1.ApplicationCommandType.ChatInput;\n}\nexports.isChatInputApplicationCommandInteraction = isChatInputApplicationCommandInteraction;\n/**\n * A type-guard check for context menu application commands.\n *\n * @param interaction The interaction to check against\n * @returns A boolean that indicates if the interaction is a context menu application command\n */\nfunction isContextMenuApplicationCommandInteraction(interaction) {\n  return interaction.data.type === index_1.ApplicationCommandType.Message || interaction.data.type === index_1.ApplicationCommandType.User;\n}\nexports.isContextMenuApplicationCommandInteraction = isContextMenuApplicationCommandInteraction;","map":{"version":3,"names":["index_1","require","isDMInteraction","interaction","Reflect","has","exports","isGuildInteraction","isApplicationCommandDMInteraction","isApplicationCommandGuildInteraction","isMessageComponentDMInteraction","isMessageComponentGuildInteraction","isLinkButton","component","style","ButtonStyle","Link","isInteractionButton","isMessageComponentInteraction","type","InteractionType","MessageComponent","isMessageComponentButtonInteraction","data","component_type","ComponentType","Button","isMessageComponentSelectMenuInteraction","StringSelect","UserSelect","RoleSelect","MentionableSelect","ChannelSelect","includes","isChatInputApplicationCommandInteraction","ApplicationCommandType","ChatInput","isContextMenuApplicationCommandInteraction","Message","User"],"sources":["v10.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}