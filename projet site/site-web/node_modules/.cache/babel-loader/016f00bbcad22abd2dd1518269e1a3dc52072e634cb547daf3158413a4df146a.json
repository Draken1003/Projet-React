{"ast":null,"code":"'use strict';\n\nconst {\n  Collection\n} = require('@discordjs/collection');\nconst Base = require('./Base');\nconst {\n  GuildOnboardingPromptOption\n} = require('./GuildOnboardingPromptOption');\n\n/**\n * Represents the data of a prompt of a guilds onboarding.\n * @extends {Base}\n */\nclass GuildOnboardingPrompt extends Base {\n  constructor(client, data, guildId) {\n    super(client);\n\n    /**\n     * The id of the guild this onboarding prompt is from\n     * @type {Snowflake}\n     */\n    this.guildId = guildId;\n\n    /**\n     * The id of the prompt\n     * @type {Snowflake}\n     */\n    this.id = data.id;\n\n    /**\n     * The options available within the prompt\n     * @type {Collection<Snowflake, GuildOnboardingPromptOption>}\n     */\n    this.options = data.options.reduce((options, option) => options.set(option.id, new GuildOnboardingPromptOption(client, option, guildId)), new Collection());\n\n    /**\n     * The title of the prompt\n     * @type {string}\n     */\n    this.title = data.title;\n\n    /**\n     * Whether users are limited to selecting one option for the prompt\n     * @type {boolean}\n     */\n    this.singleSelect = data.single_select;\n\n    /**\n     * Whether the prompt is required before a user completes the onboarding flow\n     * @type {boolean}\n     */\n    this.required = data.required;\n\n    /**\n     * Whether the prompt is present in the onboarding flow.\n     * If `false`, the prompt will only appear in the Channels & Roles tab\n     * @type {boolean}\n     */\n    this.inOnboarding = data.in_onboarding;\n\n    /**\n     * The type of the prompt\n     * @type {GuildOnboardingPromptType}\n     */\n    this.type = data.type;\n  }\n\n  /**\n   * The guild this onboarding prompt is from\n   * @type {Guild}\n   * @readonly\n   */\n  get guild() {\n    return this.client.guilds.cache.get(this.guildId);\n  }\n}\nexports.GuildOnboardingPrompt = GuildOnboardingPrompt;","map":{"version":3,"names":["Collection","require","Base","GuildOnboardingPromptOption","GuildOnboardingPrompt","constructor","client","data","guildId","id","options","reduce","option","set","title","singleSelect","single_select","required","inOnboarding","in_onboarding","type","guild","guilds","cache","get","exports"],"sources":["C:/Users/hetit/node_modules/discord.js/src/structures/GuildOnboardingPrompt.js"],"sourcesContent":["'use strict';\n\nconst { Collection } = require('@discordjs/collection');\nconst Base = require('./Base');\nconst { GuildOnboardingPromptOption } = require('./GuildOnboardingPromptOption');\n\n/**\n * Represents the data of a prompt of a guilds onboarding.\n * @extends {Base}\n */\nclass GuildOnboardingPrompt extends Base {\n  constructor(client, data, guildId) {\n    super(client);\n\n    /**\n     * The id of the guild this onboarding prompt is from\n     * @type {Snowflake}\n     */\n    this.guildId = guildId;\n\n    /**\n     * The id of the prompt\n     * @type {Snowflake}\n     */\n    this.id = data.id;\n\n    /**\n     * The options available within the prompt\n     * @type {Collection<Snowflake, GuildOnboardingPromptOption>}\n     */\n    this.options = data.options.reduce(\n      (options, option) => options.set(option.id, new GuildOnboardingPromptOption(client, option, guildId)),\n      new Collection(),\n    );\n\n    /**\n     * The title of the prompt\n     * @type {string}\n     */\n    this.title = data.title;\n\n    /**\n     * Whether users are limited to selecting one option for the prompt\n     * @type {boolean}\n     */\n    this.singleSelect = data.single_select;\n\n    /**\n     * Whether the prompt is required before a user completes the onboarding flow\n     * @type {boolean}\n     */\n    this.required = data.required;\n\n    /**\n     * Whether the prompt is present in the onboarding flow.\n     * If `false`, the prompt will only appear in the Channels & Roles tab\n     * @type {boolean}\n     */\n    this.inOnboarding = data.in_onboarding;\n\n    /**\n     * The type of the prompt\n     * @type {GuildOnboardingPromptType}\n     */\n    this.type = data.type;\n  }\n\n  /**\n   * The guild this onboarding prompt is from\n   * @type {Guild}\n   * @readonly\n   */\n  get guild() {\n    return this.client.guilds.cache.get(this.guildId);\n  }\n}\n\nexports.GuildOnboardingPrompt = GuildOnboardingPrompt;\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAM;EAAEA;AAAW,CAAC,GAAGC,OAAO,CAAC,uBAAuB,CAAC;AACvD,MAAMC,IAAI,GAAGD,OAAO,CAAC,QAAQ,CAAC;AAC9B,MAAM;EAAEE;AAA4B,CAAC,GAAGF,OAAO,CAAC,+BAA+B,CAAC;;AAEhF;AACA;AACA;AACA;AACA,MAAMG,qBAAqB,SAASF,IAAI,CAAC;EACvCG,WAAWA,CAACC,MAAM,EAAEC,IAAI,EAAEC,OAAO,EAAE;IACjC,KAAK,CAACF,MAAM,CAAC;;IAEb;AACJ;AACA;AACA;IACI,IAAI,CAACE,OAAO,GAAGA,OAAO;;IAEtB;AACJ;AACA;AACA;IACI,IAAI,CAACC,EAAE,GAAGF,IAAI,CAACE,EAAE;;IAEjB;AACJ;AACA;AACA;IACI,IAAI,CAACC,OAAO,GAAGH,IAAI,CAACG,OAAO,CAACC,MAAM,CAChC,CAACD,OAAO,EAAEE,MAAM,KAAKF,OAAO,CAACG,GAAG,CAACD,MAAM,CAACH,EAAE,EAAE,IAAIN,2BAA2B,CAACG,MAAM,EAAEM,MAAM,EAAEJ,OAAO,CAAC,CAAC,EACrG,IAAIR,UAAU,CAAC,CACjB,CAAC;;IAED;AACJ;AACA;AACA;IACI,IAAI,CAACc,KAAK,GAAGP,IAAI,CAACO,KAAK;;IAEvB;AACJ;AACA;AACA;IACI,IAAI,CAACC,YAAY,GAAGR,IAAI,CAACS,aAAa;;IAEtC;AACJ;AACA;AACA;IACI,IAAI,CAACC,QAAQ,GAAGV,IAAI,CAACU,QAAQ;;IAE7B;AACJ;AACA;AACA;AACA;IACI,IAAI,CAACC,YAAY,GAAGX,IAAI,CAACY,aAAa;;IAEtC;AACJ;AACA;AACA;IACI,IAAI,CAACC,IAAI,GAAGb,IAAI,CAACa,IAAI;EACvB;;EAEA;AACF;AACA;AACA;AACA;EACE,IAAIC,KAAKA,CAAA,EAAG;IACV,OAAO,IAAI,CAACf,MAAM,CAACgB,MAAM,CAACC,KAAK,CAACC,GAAG,CAAC,IAAI,CAAChB,OAAO,CAAC;EACnD;AACF;AAEAiB,OAAO,CAACrB,qBAAqB,GAAGA,qBAAqB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}