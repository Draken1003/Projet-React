{"ast":null,"code":"'use strict';\n\nconst DataManager = require('./DataManager');\nconst {\n  MakeCacheOverrideSymbol\n} = require('../util/Symbols');\n\n/**\n * Manages the API methods of a data model with a mutable cache of instances.\n * @extends {DataManager}\n * @abstract\n */\nclass CachedManager extends DataManager {\n  constructor(client, holds, iterable) {\n    super(client, holds);\n\n    /**\n     * The private cache of items for this manager.\n     * @type {Collection}\n     * @private\n     * @readonly\n     * @name CachedManager#_cache\n     */\n    Object.defineProperty(this, '_cache', {\n      value: this.client.options.makeCache(this.constructor[MakeCacheOverrideSymbol] ?? this.constructor, this.holds, this.constructor)\n    });\n    if (iterable) {\n      for (const item of iterable) {\n        this._add(item);\n      }\n    }\n  }\n\n  /**\n   * The cache of items for this manager.\n   * @type {Collection}\n   * @abstract\n   */\n  get cache() {\n    return this._cache;\n  }\n  _add(data, cache = true, {\n    id,\n    extras = []\n  } = {}) {\n    const existing = this.cache.get(id ?? data.id);\n    if (existing) {\n      if (cache) {\n        existing._patch(data);\n        return existing;\n      }\n      const clone = existing._clone();\n      clone._patch(data);\n      return clone;\n    }\n    const entry = this.holds ? new this.holds(this.client, data, ...extras) : data;\n    if (cache) this.cache.set(id ?? entry.id, entry);\n    return entry;\n  }\n}\nmodule.exports = CachedManager;","map":{"version":3,"names":["DataManager","require","MakeCacheOverrideSymbol","CachedManager","constructor","client","holds","iterable","Object","defineProperty","value","options","makeCache","item","_add","cache","_cache","data","id","extras","existing","get","_patch","clone","_clone","entry","set","module","exports"],"sources":["C:/Users/hetit/node_modules/discord.js/src/managers/CachedManager.js"],"sourcesContent":["'use strict';\n\nconst DataManager = require('./DataManager');\nconst { MakeCacheOverrideSymbol } = require('../util/Symbols');\n\n/**\n * Manages the API methods of a data model with a mutable cache of instances.\n * @extends {DataManager}\n * @abstract\n */\nclass CachedManager extends DataManager {\n  constructor(client, holds, iterable) {\n    super(client, holds);\n\n    /**\n     * The private cache of items for this manager.\n     * @type {Collection}\n     * @private\n     * @readonly\n     * @name CachedManager#_cache\n     */\n    Object.defineProperty(this, '_cache', {\n      value: this.client.options.makeCache(\n        this.constructor[MakeCacheOverrideSymbol] ?? this.constructor,\n        this.holds,\n        this.constructor,\n      ),\n    });\n\n    if (iterable) {\n      for (const item of iterable) {\n        this._add(item);\n      }\n    }\n  }\n\n  /**\n   * The cache of items for this manager.\n   * @type {Collection}\n   * @abstract\n   */\n  get cache() {\n    return this._cache;\n  }\n\n  _add(data, cache = true, { id, extras = [] } = {}) {\n    const existing = this.cache.get(id ?? data.id);\n    if (existing) {\n      if (cache) {\n        existing._patch(data);\n        return existing;\n      }\n      const clone = existing._clone();\n      clone._patch(data);\n      return clone;\n    }\n\n    const entry = this.holds ? new this.holds(this.client, data, ...extras) : data;\n    if (cache) this.cache.set(id ?? entry.id, entry);\n    return entry;\n  }\n}\n\nmodule.exports = CachedManager;\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,WAAW,GAAGC,OAAO,CAAC,eAAe,CAAC;AAC5C,MAAM;EAAEC;AAAwB,CAAC,GAAGD,OAAO,CAAC,iBAAiB,CAAC;;AAE9D;AACA;AACA;AACA;AACA;AACA,MAAME,aAAa,SAASH,WAAW,CAAC;EACtCI,WAAWA,CAACC,MAAM,EAAEC,KAAK,EAAEC,QAAQ,EAAE;IACnC,KAAK,CAACF,MAAM,EAAEC,KAAK,CAAC;;IAEpB;AACJ;AACA;AACA;AACA;AACA;AACA;IACIE,MAAM,CAACC,cAAc,CAAC,IAAI,EAAE,QAAQ,EAAE;MACpCC,KAAK,EAAE,IAAI,CAACL,MAAM,CAACM,OAAO,CAACC,SAAS,CAClC,IAAI,CAACR,WAAW,CAACF,uBAAuB,CAAC,IAAI,IAAI,CAACE,WAAW,EAC7D,IAAI,CAACE,KAAK,EACV,IAAI,CAACF,WACP;IACF,CAAC,CAAC;IAEF,IAAIG,QAAQ,EAAE;MACZ,KAAK,MAAMM,IAAI,IAAIN,QAAQ,EAAE;QAC3B,IAAI,CAACO,IAAI,CAACD,IAAI,CAAC;MACjB;IACF;EACF;;EAEA;AACF;AACA;AACA;AACA;EACE,IAAIE,KAAKA,CAAA,EAAG;IACV,OAAO,IAAI,CAACC,MAAM;EACpB;EAEAF,IAAIA,CAACG,IAAI,EAAEF,KAAK,GAAG,IAAI,EAAE;IAAEG,EAAE;IAAEC,MAAM,GAAG;EAAG,CAAC,GAAG,CAAC,CAAC,EAAE;IACjD,MAAMC,QAAQ,GAAG,IAAI,CAACL,KAAK,CAACM,GAAG,CAACH,EAAE,IAAID,IAAI,CAACC,EAAE,CAAC;IAC9C,IAAIE,QAAQ,EAAE;MACZ,IAAIL,KAAK,EAAE;QACTK,QAAQ,CAACE,MAAM,CAACL,IAAI,CAAC;QACrB,OAAOG,QAAQ;MACjB;MACA,MAAMG,KAAK,GAAGH,QAAQ,CAACI,MAAM,CAAC,CAAC;MAC/BD,KAAK,CAACD,MAAM,CAACL,IAAI,CAAC;MAClB,OAAOM,KAAK;IACd;IAEA,MAAME,KAAK,GAAG,IAAI,CAACnB,KAAK,GAAG,IAAI,IAAI,CAACA,KAAK,CAAC,IAAI,CAACD,MAAM,EAAEY,IAAI,EAAE,GAAGE,MAAM,CAAC,GAAGF,IAAI;IAC9E,IAAIF,KAAK,EAAE,IAAI,CAACA,KAAK,CAACW,GAAG,CAACR,EAAE,IAAIO,KAAK,CAACP,EAAE,EAAEO,KAAK,CAAC;IAChD,OAAOA,KAAK;EACd;AACF;AAEAE,MAAM,CAACC,OAAO,GAAGzB,aAAa","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}