{"ast":null,"code":"'use strict';\n\nconst {\n  GuildMemberFlags\n} = require('discord-api-types/v10');\nconst BitField = require('./BitField');\n\n/**\n * Data structure that makes it easy to interact with a {@link GuildMember#flags} bitfield.\n * @extends {BitField}\n */\nclass GuildMemberFlagsBitField extends BitField {\n  /**\n   * Numeric guild guild member flags.\n   * @type {GuildMemberFlags}\n   * @memberof GuildMemberFlagsBitField\n   */\n  static Flags = GuildMemberFlags;\n}\n\n/**\n * @name GuildMemberFlagsBitField\n * @kind constructor\n * @memberof GuildMemberFlagsBitField\n * @param {BitFieldResolvable} [bits=0] Bit(s) to read from\n */\n\n/**\n * Bitfield of the packed bits\n * @type {number}\n * @name GuildMemberFlagsBitField#bitfield\n */\n\n/**\n * Data that can be resolved to give a guild member flag bitfield. This can be:\n * * A string (see {@link GuildMemberFlagsBitField.Flags})\n * * A guild member flag\n * * An instance of GuildMemberFlagsBitField\n * * An Array of GuildMemberFlagsResolvable\n * @typedef {string|number|GuildMemberFlagsBitField|GuildMemberFlagsResolvable[]} GuildMemberFlagsResolvable\n */\n\nexports.GuildMemberFlagsBitField = GuildMemberFlagsBitField;","map":{"version":3,"names":["GuildMemberFlags","require","BitField","GuildMemberFlagsBitField","Flags","exports"],"sources":["C:/Users/hetit/node_modules/discord.js/src/util/GuildMemberFlagsBitField.js"],"sourcesContent":["'use strict';\n\nconst { GuildMemberFlags } = require('discord-api-types/v10');\nconst BitField = require('./BitField');\n\n/**\n * Data structure that makes it easy to interact with a {@link GuildMember#flags} bitfield.\n * @extends {BitField}\n */\nclass GuildMemberFlagsBitField extends BitField {\n  /**\n   * Numeric guild guild member flags.\n   * @type {GuildMemberFlags}\n   * @memberof GuildMemberFlagsBitField\n   */\n  static Flags = GuildMemberFlags;\n}\n\n/**\n * @name GuildMemberFlagsBitField\n * @kind constructor\n * @memberof GuildMemberFlagsBitField\n * @param {BitFieldResolvable} [bits=0] Bit(s) to read from\n */\n\n/**\n * Bitfield of the packed bits\n * @type {number}\n * @name GuildMemberFlagsBitField#bitfield\n */\n\n/**\n * Data that can be resolved to give a guild member flag bitfield. This can be:\n * * A string (see {@link GuildMemberFlagsBitField.Flags})\n * * A guild member flag\n * * An instance of GuildMemberFlagsBitField\n * * An Array of GuildMemberFlagsResolvable\n * @typedef {string|number|GuildMemberFlagsBitField|GuildMemberFlagsResolvable[]} GuildMemberFlagsResolvable\n */\n\nexports.GuildMemberFlagsBitField = GuildMemberFlagsBitField;\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAM;EAAEA;AAAiB,CAAC,GAAGC,OAAO,CAAC,uBAAuB,CAAC;AAC7D,MAAMC,QAAQ,GAAGD,OAAO,CAAC,YAAY,CAAC;;AAEtC;AACA;AACA;AACA;AACA,MAAME,wBAAwB,SAASD,QAAQ,CAAC;EAC9C;AACF;AACA;AACA;AACA;EACE,OAAOE,KAAK,GAAGJ,gBAAgB;AACjC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAK,OAAO,CAACF,wBAAwB,GAAGA,wBAAwB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}