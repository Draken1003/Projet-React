{"ast":null,"code":"'use strict';\n\nconst DjsErrorCodes = require('./ErrorCodes');\nconst Messages = {\n  [DjsErrorCodes.ClientInvalidOption]: (prop, must) => `The ${prop} option must be ${must}`,\n  [DjsErrorCodes.ClientInvalidProvidedShards]: 'None of the provided shards were valid.',\n  [DjsErrorCodes.ClientMissingIntents]: 'Valid intents must be provided for the Client.',\n  [DjsErrorCodes.ClientNotReady]: action => `The client needs to be logged in to ${action}.`,\n  [DjsErrorCodes.TokenInvalid]: 'An invalid token was provided.',\n  [DjsErrorCodes.TokenMissing]: 'Request to use token, but token was unavailable to the client.',\n  [DjsErrorCodes.ApplicationCommandPermissionsTokenMissing]: 'Editing application command permissions requires an OAuth2 bearer token, but none was provided.',\n  [DjsErrorCodes.WSCloseRequested]: 'WebSocket closed due to user request.',\n  [DjsErrorCodes.WSConnectionExists]: 'There is already an existing WebSocket connection.',\n  [DjsErrorCodes.WSNotOpen]: (data = 'data') => `WebSocket not open to send ${data}`,\n  [DjsErrorCodes.ManagerDestroyed]: 'Manager was destroyed.',\n  [DjsErrorCodes.BitFieldInvalid]: bit => `Invalid bitfield flag or number: ${bit}.`,\n  [DjsErrorCodes.ShardingInvalid]: 'Invalid shard settings were provided.',\n  [DjsErrorCodes.ShardingRequired]: 'This session would have handled too many guilds - Sharding is required.',\n  [DjsErrorCodes.InvalidIntents]: 'Invalid intent provided for WebSocket intents.',\n  [DjsErrorCodes.DisallowedIntents]: 'Privileged intent provided is not enabled or whitelisted.',\n  [DjsErrorCodes.ShardingNoShards]: 'No shards have been spawned.',\n  [DjsErrorCodes.ShardingInProcess]: 'Shards are still being spawned.',\n  [DjsErrorCodes.ShardingInvalidEvalBroadcast]: 'Script to evaluate must be a function',\n  [DjsErrorCodes.ShardingShardNotFound]: id => `Shard ${id} could not be found.`,\n  [DjsErrorCodes.ShardingAlreadySpawned]: count => `Already spawned ${count} shards.`,\n  [DjsErrorCodes.ShardingProcessExists]: id => `Shard ${id} already has an active process.`,\n  [DjsErrorCodes.ShardingWorkerExists]: id => `Shard ${id} already has an active worker.`,\n  [DjsErrorCodes.ShardingReadyTimeout]: id => `Shard ${id}'s Client took too long to become ready.`,\n  [DjsErrorCodes.ShardingReadyDisconnected]: id => `Shard ${id}'s Client disconnected before becoming ready.`,\n  [DjsErrorCodes.ShardingReadyDied]: id => `Shard ${id}'s process exited before its Client became ready.`,\n  [DjsErrorCodes.ShardingNoChildExists]: id => `Shard ${id} has no active process or worker.`,\n  [DjsErrorCodes.ShardingShardMiscalculation]: (shard, guild, count) => `Calculated invalid shard ${shard} for guild ${guild} with ${count} shards.`,\n  [DjsErrorCodes.ColorRange]: 'Color must be within the range 0 - 16777215 (0xFFFFFF).',\n  [DjsErrorCodes.ColorConvert]: 'Unable to convert color to a number.',\n  [DjsErrorCodes.InviteOptionsMissingChannel]: 'A valid guild channel must be provided when GuildScheduledEvent is EXTERNAL.',\n  [DjsErrorCodes.ButtonLabel]: 'MessageButton label must be a string',\n  [DjsErrorCodes.ButtonURL]: 'MessageButton URL must be a string',\n  [DjsErrorCodes.ButtonCustomId]: 'MessageButton customId must be a string',\n  [DjsErrorCodes.SelectMenuCustomId]: 'MessageSelectMenu customId must be a string',\n  [DjsErrorCodes.SelectMenuPlaceholder]: 'MessageSelectMenu placeholder must be a string',\n  [DjsErrorCodes.SelectOptionLabel]: 'MessageSelectOption label must be a string',\n  [DjsErrorCodes.SelectOptionValue]: 'MessageSelectOption value must be a string',\n  [DjsErrorCodes.SelectOptionDescription]: 'MessageSelectOption description must be a string',\n  [DjsErrorCodes.InteractionCollectorError]: reason => `Collector received no interactions before ending with reason: ${reason}`,\n  [DjsErrorCodes.FileNotFound]: file => `File could not be found: ${file}`,\n  [DjsErrorCodes.UserBannerNotFetched]: \"You must fetch this user's banner before trying to generate its URL!\",\n  [DjsErrorCodes.UserNoDMChannel]: 'No DM Channel exists!',\n  [DjsErrorCodes.VoiceNotStageChannel]: 'You are only allowed to do this in stage channels.',\n  [DjsErrorCodes.VoiceStateNotOwn]: 'You cannot self-deafen/mute/request to speak on VoiceStates that do not belong to the ClientUser.',\n  [DjsErrorCodes.VoiceStateInvalidType]: name => `${name} must be a boolean.`,\n  [DjsErrorCodes.ReqResourceType]: 'The resource must be a string, Buffer or a valid file stream.',\n  [DjsErrorCodes.ImageFormat]: format => `Invalid image format: ${format}`,\n  [DjsErrorCodes.ImageSize]: size => `Invalid image size: ${size}`,\n  [DjsErrorCodes.MessageBulkDeleteType]: 'The messages must be an Array, Collection, or number.',\n  [DjsErrorCodes.MessageNonceType]: 'Message nonce must be an integer or a string.',\n  [DjsErrorCodes.MessageContentType]: 'Message content must be a string.',\n  [DjsErrorCodes.SplitMaxLen]: 'Chunk exceeds the max length and contains no split characters.',\n  [DjsErrorCodes.BanResolveId]: (ban = false) => `Couldn't resolve the user id to ${ban ? 'ban' : 'unban'}.`,\n  [DjsErrorCodes.FetchBanResolveId]: \"Couldn't resolve the user id to fetch the ban.\",\n  [DjsErrorCodes.PruneDaysType]: 'Days must be a number',\n  [DjsErrorCodes.GuildChannelResolve]: 'Could not resolve channel to a guild channel.',\n  [DjsErrorCodes.GuildVoiceChannelResolve]: 'Could not resolve channel to a guild voice channel.',\n  [DjsErrorCodes.GuildChannelOrphan]: 'Could not find a parent to this guild channel.',\n  [DjsErrorCodes.GuildChannelUnowned]: \"The fetched channel does not belong to this manager's guild.\",\n  [DjsErrorCodes.GuildOwned]: 'Guild is owned by the client.',\n  [DjsErrorCodes.GuildMembersTimeout]: \"Members didn't arrive in time.\",\n  [DjsErrorCodes.GuildUncachedMe]: 'The client user as a member of this guild is uncached.',\n  [DjsErrorCodes.ChannelNotCached]: 'Could not find the channel where this message came from in the cache!',\n  [DjsErrorCodes.StageChannelResolve]: 'Could not resolve channel to a stage channel.',\n  [DjsErrorCodes.GuildScheduledEventResolve]: 'Could not resolve the guild scheduled event.',\n  [DjsErrorCodes.FetchOwnerId]: \"Couldn't resolve the guild ownerId to fetch the member.\",\n  [DjsErrorCodes.InvalidType]: (name, expected, an = false) => `Supplied ${name} is not a${an ? 'n' : ''} ${expected}.`,\n  [DjsErrorCodes.InvalidElement]: (type, name, elem) => `Supplied ${type} ${name} includes an invalid element: ${elem}`,\n  [DjsErrorCodes.MessageThreadParent]: 'The message was not sent in a guild text or news channel',\n  [DjsErrorCodes.MessageExistingThread]: 'The message already has a thread',\n  [DjsErrorCodes.ThreadInvitableType]: type => `Invitable cannot be edited on ${type}`,\n  [DjsErrorCodes.WebhookMessage]: 'The message was not sent by a webhook.',\n  [DjsErrorCodes.WebhookTokenUnavailable]: 'This action requires a webhook token, but none is available.',\n  [DjsErrorCodes.WebhookURLInvalid]: 'The provided webhook URL is not valid.',\n  [DjsErrorCodes.WebhookApplication]: 'This message webhook belongs to an application and cannot be fetched.',\n  [DjsErrorCodes.MessageReferenceMissing]: 'The message does not reference another message',\n  [DjsErrorCodes.EmojiType]: 'Emoji must be a string or GuildEmoji/ReactionEmoji',\n  [DjsErrorCodes.EmojiManaged]: 'Emoji is managed and has no Author.',\n  [DjsErrorCodes.MissingManageGuildExpressionsPermission]: guild => `Client must have Manage Guild Expressions permission in guild ${guild} to see emoji authors.`,\n  [DjsErrorCodes.MissingManageEmojisAndStickersPermission]: guild => `Client must have Manage Emojis and Stickers permission in guild ${guild} to see emoji authors.`,\n  [DjsErrorCodes.NotGuildSticker]: 'Sticker is a standard (non-guild) sticker and has no author.',\n  [DjsErrorCodes.ReactionResolveUser]: \"Couldn't resolve the user id to remove from the reaction.\",\n  [DjsErrorCodes.VanityURL]: 'This guild does not have the vanity URL feature enabled.',\n  [DjsErrorCodes.InviteResolveCode]: 'Could not resolve the code to fetch the invite.',\n  [DjsErrorCodes.InviteNotFound]: 'Could not find the requested invite.',\n  [DjsErrorCodes.DeleteGroupDMChannel]: \"Bots don't have access to Group DM Channels and cannot delete them\",\n  [DjsErrorCodes.FetchGroupDMChannel]: \"Bots don't have access to Group DM Channels and cannot fetch them\",\n  [DjsErrorCodes.MemberFetchNonceLength]: 'Nonce length must not exceed 32 characters.',\n  [DjsErrorCodes.GlobalCommandPermissions]: 'Permissions for global commands may only be fetched or modified by providing a GuildResolvable ' + \"or from a guild's application command manager.\",\n  [DjsErrorCodes.GuildUncachedEntityResolve]: type => `Cannot resolve ${type} from an arbitrary guild, provide an id instead`,\n  [DjsErrorCodes.InteractionAlreadyReplied]: 'The reply to this interaction has already been sent or deferred.',\n  [DjsErrorCodes.InteractionNotReplied]: 'The reply to this interaction has not been sent or deferred.',\n  [DjsErrorCodes.InteractionEphemeralReplied]: 'Ephemeral responses cannot be deleted.',\n  [DjsErrorCodes.CommandInteractionOptionNotFound]: name => `Required option \"${name}\" not found.`,\n  [DjsErrorCodes.CommandInteractionOptionType]: (name, type, expected) => `Option \"${name}\" is of type: ${type}; expected ${expected}.`,\n  [DjsErrorCodes.CommandInteractionOptionEmpty]: (name, type) => `Required option \"${name}\" is of type: ${type}; expected a non-empty value.`,\n  [DjsErrorCodes.CommandInteractionOptionNoSubcommand]: 'No subcommand specified for interaction.',\n  [DjsErrorCodes.CommandInteractionOptionNoSubcommandGroup]: 'No subcommand group specified for interaction.',\n  [DjsErrorCodes.CommandInteractionOptionInvalidChannelType]: (name, type, expected) => `The type of channel of the option \"${name}\" is: ${type}; expected ${expected}.`,\n  [DjsErrorCodes.AutocompleteInteractionOptionNoFocusedOption]: 'No focused option for autocomplete interaction.',\n  [DjsErrorCodes.ModalSubmitInteractionFieldNotFound]: customId => `Required field with custom id \"${customId}\" not found.`,\n  [DjsErrorCodes.ModalSubmitInteractionFieldType]: (customId, type, expected) => `Field with custom id \"${customId}\" is of type: ${type}; expected ${expected}.`,\n  [DjsErrorCodes.InvalidMissingScopes]: 'At least one valid scope must be provided for the invite',\n  [DjsErrorCodes.InvalidScopesWithPermissions]: 'Permissions cannot be set without the bot scope.',\n  [DjsErrorCodes.NotImplemented]: (what, name) => `Method ${what} not implemented on ${name}.`,\n  [DjsErrorCodes.SweepFilterReturn]: 'The return value of the sweepFilter function was not false or a Function',\n  [DjsErrorCodes.GuildForumMessageRequired]: 'You must provide a message to create a guild forum thread'\n};\nmodule.exports = Messages;","map":{"version":3,"names":["DjsErrorCodes","require","Messages","ClientInvalidOption","prop","must","ClientInvalidProvidedShards","ClientMissingIntents","ClientNotReady","action","TokenInvalid","TokenMissing","ApplicationCommandPermissionsTokenMissing","WSCloseRequested","WSConnectionExists","WSNotOpen","data","ManagerDestroyed","BitFieldInvalid","bit","ShardingInvalid","ShardingRequired","InvalidIntents","DisallowedIntents","ShardingNoShards","ShardingInProcess","ShardingInvalidEvalBroadcast","ShardingShardNotFound","id","ShardingAlreadySpawned","count","ShardingProcessExists","ShardingWorkerExists","ShardingReadyTimeout","ShardingReadyDisconnected","ShardingReadyDied","ShardingNoChildExists","ShardingShardMiscalculation","shard","guild","ColorRange","ColorConvert","InviteOptionsMissingChannel","ButtonLabel","ButtonURL","ButtonCustomId","SelectMenuCustomId","SelectMenuPlaceholder","SelectOptionLabel","SelectOptionValue","SelectOptionDescription","InteractionCollectorError","reason","FileNotFound","file","UserBannerNotFetched","UserNoDMChannel","VoiceNotStageChannel","VoiceStateNotOwn","VoiceStateInvalidType","name","ReqResourceType","ImageFormat","format","ImageSize","size","MessageBulkDeleteType","MessageNonceType","MessageContentType","SplitMaxLen","BanResolveId","ban","FetchBanResolveId","PruneDaysType","GuildChannelResolve","GuildVoiceChannelResolve","GuildChannelOrphan","GuildChannelUnowned","GuildOwned","GuildMembersTimeout","GuildUncachedMe","ChannelNotCached","StageChannelResolve","GuildScheduledEventResolve","FetchOwnerId","InvalidType","expected","an","InvalidElement","type","elem","MessageThreadParent","MessageExistingThread","ThreadInvitableType","WebhookMessage","WebhookTokenUnavailable","WebhookURLInvalid","WebhookApplication","MessageReferenceMissing","EmojiType","EmojiManaged","MissingManageGuildExpressionsPermission","MissingManageEmojisAndStickersPermission","NotGuildSticker","ReactionResolveUser","VanityURL","InviteResolveCode","InviteNotFound","DeleteGroupDMChannel","FetchGroupDMChannel","MemberFetchNonceLength","GlobalCommandPermissions","GuildUncachedEntityResolve","InteractionAlreadyReplied","InteractionNotReplied","InteractionEphemeralReplied","CommandInteractionOptionNotFound","CommandInteractionOptionType","CommandInteractionOptionEmpty","CommandInteractionOptionNoSubcommand","CommandInteractionOptionNoSubcommandGroup","CommandInteractionOptionInvalidChannelType","AutocompleteInteractionOptionNoFocusedOption","ModalSubmitInteractionFieldNotFound","customId","ModalSubmitInteractionFieldType","InvalidMissingScopes","InvalidScopesWithPermissions","NotImplemented","what","SweepFilterReturn","GuildForumMessageRequired","module","exports"],"sources":["C:/Users/hetit/node_modules/discord.js/src/errors/Messages.js"],"sourcesContent":["'use strict';\n\nconst DjsErrorCodes = require('./ErrorCodes');\n\nconst Messages = {\n  [DjsErrorCodes.ClientInvalidOption]: (prop, must) => `The ${prop} option must be ${must}`,\n  [DjsErrorCodes.ClientInvalidProvidedShards]: 'None of the provided shards were valid.',\n  [DjsErrorCodes.ClientMissingIntents]: 'Valid intents must be provided for the Client.',\n  [DjsErrorCodes.ClientNotReady]: action => `The client needs to be logged in to ${action}.`,\n\n  [DjsErrorCodes.TokenInvalid]: 'An invalid token was provided.',\n  [DjsErrorCodes.TokenMissing]: 'Request to use token, but token was unavailable to the client.',\n  [DjsErrorCodes.ApplicationCommandPermissionsTokenMissing]:\n    'Editing application command permissions requires an OAuth2 bearer token, but none was provided.',\n\n  [DjsErrorCodes.WSCloseRequested]: 'WebSocket closed due to user request.',\n  [DjsErrorCodes.WSConnectionExists]: 'There is already an existing WebSocket connection.',\n  [DjsErrorCodes.WSNotOpen]: (data = 'data') => `WebSocket not open to send ${data}`,\n  [DjsErrorCodes.ManagerDestroyed]: 'Manager was destroyed.',\n\n  [DjsErrorCodes.BitFieldInvalid]: bit => `Invalid bitfield flag or number: ${bit}.`,\n\n  [DjsErrorCodes.ShardingInvalid]: 'Invalid shard settings were provided.',\n  [DjsErrorCodes.ShardingRequired]: 'This session would have handled too many guilds - Sharding is required.',\n  [DjsErrorCodes.InvalidIntents]: 'Invalid intent provided for WebSocket intents.',\n  [DjsErrorCodes.DisallowedIntents]: 'Privileged intent provided is not enabled or whitelisted.',\n  [DjsErrorCodes.ShardingNoShards]: 'No shards have been spawned.',\n  [DjsErrorCodes.ShardingInProcess]: 'Shards are still being spawned.',\n  [DjsErrorCodes.ShardingInvalidEvalBroadcast]: 'Script to evaluate must be a function',\n  [DjsErrorCodes.ShardingShardNotFound]: id => `Shard ${id} could not be found.`,\n  [DjsErrorCodes.ShardingAlreadySpawned]: count => `Already spawned ${count} shards.`,\n  [DjsErrorCodes.ShardingProcessExists]: id => `Shard ${id} already has an active process.`,\n  [DjsErrorCodes.ShardingWorkerExists]: id => `Shard ${id} already has an active worker.`,\n  [DjsErrorCodes.ShardingReadyTimeout]: id => `Shard ${id}'s Client took too long to become ready.`,\n  [DjsErrorCodes.ShardingReadyDisconnected]: id => `Shard ${id}'s Client disconnected before becoming ready.`,\n  [DjsErrorCodes.ShardingReadyDied]: id => `Shard ${id}'s process exited before its Client became ready.`,\n  [DjsErrorCodes.ShardingNoChildExists]: id => `Shard ${id} has no active process or worker.`,\n  [DjsErrorCodes.ShardingShardMiscalculation]: (shard, guild, count) =>\n    `Calculated invalid shard ${shard} for guild ${guild} with ${count} shards.`,\n\n  [DjsErrorCodes.ColorRange]: 'Color must be within the range 0 - 16777215 (0xFFFFFF).',\n  [DjsErrorCodes.ColorConvert]: 'Unable to convert color to a number.',\n\n  [DjsErrorCodes.InviteOptionsMissingChannel]:\n    'A valid guild channel must be provided when GuildScheduledEvent is EXTERNAL.',\n\n  [DjsErrorCodes.ButtonLabel]: 'MessageButton label must be a string',\n  [DjsErrorCodes.ButtonURL]: 'MessageButton URL must be a string',\n  [DjsErrorCodes.ButtonCustomId]: 'MessageButton customId must be a string',\n\n  [DjsErrorCodes.SelectMenuCustomId]: 'MessageSelectMenu customId must be a string',\n  [DjsErrorCodes.SelectMenuPlaceholder]: 'MessageSelectMenu placeholder must be a string',\n  [DjsErrorCodes.SelectOptionLabel]: 'MessageSelectOption label must be a string',\n  [DjsErrorCodes.SelectOptionValue]: 'MessageSelectOption value must be a string',\n  [DjsErrorCodes.SelectOptionDescription]: 'MessageSelectOption description must be a string',\n\n  [DjsErrorCodes.InteractionCollectorError]: reason =>\n    `Collector received no interactions before ending with reason: ${reason}`,\n\n  [DjsErrorCodes.FileNotFound]: file => `File could not be found: ${file}`,\n\n  [DjsErrorCodes.UserBannerNotFetched]: \"You must fetch this user's banner before trying to generate its URL!\",\n  [DjsErrorCodes.UserNoDMChannel]: 'No DM Channel exists!',\n\n  [DjsErrorCodes.VoiceNotStageChannel]: 'You are only allowed to do this in stage channels.',\n\n  [DjsErrorCodes.VoiceStateNotOwn]:\n    'You cannot self-deafen/mute/request to speak on VoiceStates that do not belong to the ClientUser.',\n  [DjsErrorCodes.VoiceStateInvalidType]: name => `${name} must be a boolean.`,\n\n  [DjsErrorCodes.ReqResourceType]: 'The resource must be a string, Buffer or a valid file stream.',\n\n  [DjsErrorCodes.ImageFormat]: format => `Invalid image format: ${format}`,\n  [DjsErrorCodes.ImageSize]: size => `Invalid image size: ${size}`,\n\n  [DjsErrorCodes.MessageBulkDeleteType]: 'The messages must be an Array, Collection, or number.',\n  [DjsErrorCodes.MessageNonceType]: 'Message nonce must be an integer or a string.',\n  [DjsErrorCodes.MessageContentType]: 'Message content must be a string.',\n\n  [DjsErrorCodes.SplitMaxLen]: 'Chunk exceeds the max length and contains no split characters.',\n\n  [DjsErrorCodes.BanResolveId]: (ban = false) => `Couldn't resolve the user id to ${ban ? 'ban' : 'unban'}.`,\n  [DjsErrorCodes.FetchBanResolveId]: \"Couldn't resolve the user id to fetch the ban.\",\n\n  [DjsErrorCodes.PruneDaysType]: 'Days must be a number',\n\n  [DjsErrorCodes.GuildChannelResolve]: 'Could not resolve channel to a guild channel.',\n  [DjsErrorCodes.GuildVoiceChannelResolve]: 'Could not resolve channel to a guild voice channel.',\n  [DjsErrorCodes.GuildChannelOrphan]: 'Could not find a parent to this guild channel.',\n  [DjsErrorCodes.GuildChannelUnowned]: \"The fetched channel does not belong to this manager's guild.\",\n  [DjsErrorCodes.GuildOwned]: 'Guild is owned by the client.',\n  [DjsErrorCodes.GuildMembersTimeout]: \"Members didn't arrive in time.\",\n  [DjsErrorCodes.GuildUncachedMe]: 'The client user as a member of this guild is uncached.',\n  [DjsErrorCodes.ChannelNotCached]: 'Could not find the channel where this message came from in the cache!',\n  [DjsErrorCodes.StageChannelResolve]: 'Could not resolve channel to a stage channel.',\n  [DjsErrorCodes.GuildScheduledEventResolve]: 'Could not resolve the guild scheduled event.',\n  [DjsErrorCodes.FetchOwnerId]: \"Couldn't resolve the guild ownerId to fetch the member.\",\n\n  [DjsErrorCodes.InvalidType]: (name, expected, an = false) => `Supplied ${name} is not a${an ? 'n' : ''} ${expected}.`,\n  [DjsErrorCodes.InvalidElement]: (type, name, elem) => `Supplied ${type} ${name} includes an invalid element: ${elem}`,\n\n  [DjsErrorCodes.MessageThreadParent]: 'The message was not sent in a guild text or news channel',\n  [DjsErrorCodes.MessageExistingThread]: 'The message already has a thread',\n  [DjsErrorCodes.ThreadInvitableType]: type => `Invitable cannot be edited on ${type}`,\n\n  [DjsErrorCodes.WebhookMessage]: 'The message was not sent by a webhook.',\n  [DjsErrorCodes.WebhookTokenUnavailable]: 'This action requires a webhook token, but none is available.',\n  [DjsErrorCodes.WebhookURLInvalid]: 'The provided webhook URL is not valid.',\n  [DjsErrorCodes.WebhookApplication]: 'This message webhook belongs to an application and cannot be fetched.',\n  [DjsErrorCodes.MessageReferenceMissing]: 'The message does not reference another message',\n\n  [DjsErrorCodes.EmojiType]: 'Emoji must be a string or GuildEmoji/ReactionEmoji',\n  [DjsErrorCodes.EmojiManaged]: 'Emoji is managed and has no Author.',\n  [DjsErrorCodes.MissingManageGuildExpressionsPermission]: guild =>\n    `Client must have Manage Guild Expressions permission in guild ${guild} to see emoji authors.`,\n  [DjsErrorCodes.MissingManageEmojisAndStickersPermission]: guild =>\n    `Client must have Manage Emojis and Stickers permission in guild ${guild} to see emoji authors.`,\n\n  [DjsErrorCodes.NotGuildSticker]: 'Sticker is a standard (non-guild) sticker and has no author.',\n\n  [DjsErrorCodes.ReactionResolveUser]: \"Couldn't resolve the user id to remove from the reaction.\",\n\n  [DjsErrorCodes.VanityURL]: 'This guild does not have the vanity URL feature enabled.',\n\n  [DjsErrorCodes.InviteResolveCode]: 'Could not resolve the code to fetch the invite.',\n\n  [DjsErrorCodes.InviteNotFound]: 'Could not find the requested invite.',\n\n  [DjsErrorCodes.DeleteGroupDMChannel]: \"Bots don't have access to Group DM Channels and cannot delete them\",\n  [DjsErrorCodes.FetchGroupDMChannel]: \"Bots don't have access to Group DM Channels and cannot fetch them\",\n\n  [DjsErrorCodes.MemberFetchNonceLength]: 'Nonce length must not exceed 32 characters.',\n\n  [DjsErrorCodes.GlobalCommandPermissions]:\n    'Permissions for global commands may only be fetched or modified by providing a GuildResolvable ' +\n    \"or from a guild's application command manager.\",\n  [DjsErrorCodes.GuildUncachedEntityResolve]: type =>\n    `Cannot resolve ${type} from an arbitrary guild, provide an id instead`,\n\n  [DjsErrorCodes.InteractionAlreadyReplied]: 'The reply to this interaction has already been sent or deferred.',\n  [DjsErrorCodes.InteractionNotReplied]: 'The reply to this interaction has not been sent or deferred.',\n  [DjsErrorCodes.InteractionEphemeralReplied]: 'Ephemeral responses cannot be deleted.',\n\n  [DjsErrorCodes.CommandInteractionOptionNotFound]: name => `Required option \"${name}\" not found.`,\n  [DjsErrorCodes.CommandInteractionOptionType]: (name, type, expected) =>\n    `Option \"${name}\" is of type: ${type}; expected ${expected}.`,\n  [DjsErrorCodes.CommandInteractionOptionEmpty]: (name, type) =>\n    `Required option \"${name}\" is of type: ${type}; expected a non-empty value.`,\n  [DjsErrorCodes.CommandInteractionOptionNoSubcommand]: 'No subcommand specified for interaction.',\n  [DjsErrorCodes.CommandInteractionOptionNoSubcommandGroup]: 'No subcommand group specified for interaction.',\n  [DjsErrorCodes.CommandInteractionOptionInvalidChannelType]: (name, type, expected) =>\n    `The type of channel of the option \"${name}\" is: ${type}; expected ${expected}.`,\n  [DjsErrorCodes.AutocompleteInteractionOptionNoFocusedOption]: 'No focused option for autocomplete interaction.',\n\n  [DjsErrorCodes.ModalSubmitInteractionFieldNotFound]: customId =>\n    `Required field with custom id \"${customId}\" not found.`,\n  [DjsErrorCodes.ModalSubmitInteractionFieldType]: (customId, type, expected) =>\n    `Field with custom id \"${customId}\" is of type: ${type}; expected ${expected}.`,\n\n  [DjsErrorCodes.InvalidMissingScopes]: 'At least one valid scope must be provided for the invite',\n  [DjsErrorCodes.InvalidScopesWithPermissions]: 'Permissions cannot be set without the bot scope.',\n\n  [DjsErrorCodes.NotImplemented]: (what, name) => `Method ${what} not implemented on ${name}.`,\n\n  [DjsErrorCodes.SweepFilterReturn]: 'The return value of the sweepFilter function was not false or a Function',\n\n  [DjsErrorCodes.GuildForumMessageRequired]: 'You must provide a message to create a guild forum thread',\n};\n\nmodule.exports = Messages;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}