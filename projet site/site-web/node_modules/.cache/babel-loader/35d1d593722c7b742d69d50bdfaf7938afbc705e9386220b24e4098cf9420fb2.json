{"ast":null,"code":"'use strict';\n\nconst {\n  Collection\n} = require('@discordjs/collection');\nconst Base = require('./Base');\nconst {\n  resolvePartialEmoji\n} = require('../util/Util');\n\n/**\n * Represents the data of an option from a prompt of a guilds onboarding.\n * @extends {Base}\n */\nclass GuildOnboardingPromptOption extends Base {\n  constructor(client, data, guildId) {\n    super(client);\n\n    /**\n     * The id of the guild this onboarding prompt option is from\n     * @type {Snowflake}\n     */\n    this.guildId = guildId;\n    const guild = this.guild;\n\n    /**\n     * The id of the option\n     * @type {Snowflake}\n     */\n    this.id = data.id;\n\n    /**\n     * The channels a member is added to when the option is selected\n     * @type {Collection<Snowflake, GuildChannel>}\n     */\n    this.channels = data.channel_ids.reduce((channels, channelId) => channels.set(channelId, guild.channels.cache.get(channelId)), new Collection());\n\n    /**\n     * The roles assigned to a member when the option is selected\n     * @type {Collection<Snowflake, Role>}\n     */\n    this.roles = data.role_ids.reduce((roles, roleId) => roles.set(roleId, guild.roles.cache.get(roleId)), new Collection());\n\n    /**\n     * The data for an emoji of a guilds onboarding prompt option\n     * @typedef {Object} GuildOnboardingPromptOptionEmoji\n     * @property {?Snowflake} id The id of the emoji\n     * @property {string} name The name of the emoji\n     * @property {boolean} animated Whether the emoji is animated\n     */\n\n    /**\n     * The emoji of the option\n     * @type {?GuildOnboardingPromptOptionEmoji}\n     */\n    this.emoji = resolvePartialEmoji(data.emoji);\n\n    /**\n     * The title of the option\n     * @type {string}\n     */\n    this.title = data.title;\n\n    /**\n     * The description of the option\n     * @type {?string}\n     */\n    this.description = data.description;\n  }\n\n  /**\n   * The guild this onboarding prompt option is from\n   * @type {Guild}\n   * @readonly\n   */\n  get guild() {\n    return this.client.guilds.cache.get(this.guildId);\n  }\n}\nexports.GuildOnboardingPromptOption = GuildOnboardingPromptOption;","map":{"version":3,"names":["Collection","require","Base","resolvePartialEmoji","GuildOnboardingPromptOption","constructor","client","data","guildId","guild","id","channels","channel_ids","reduce","channelId","set","cache","get","roles","role_ids","roleId","emoji","title","description","guilds","exports"],"sources":["C:/Users/hetit/node_modules/discord.js/src/structures/GuildOnboardingPromptOption.js"],"sourcesContent":["'use strict';\n\nconst { Collection } = require('@discordjs/collection');\nconst Base = require('./Base');\nconst { resolvePartialEmoji } = require('../util/Util');\n\n/**\n * Represents the data of an option from a prompt of a guilds onboarding.\n * @extends {Base}\n */\nclass GuildOnboardingPromptOption extends Base {\n  constructor(client, data, guildId) {\n    super(client);\n\n    /**\n     * The id of the guild this onboarding prompt option is from\n     * @type {Snowflake}\n     */\n    this.guildId = guildId;\n\n    const guild = this.guild;\n\n    /**\n     * The id of the option\n     * @type {Snowflake}\n     */\n    this.id = data.id;\n\n    /**\n     * The channels a member is added to when the option is selected\n     * @type {Collection<Snowflake, GuildChannel>}\n     */\n    this.channels = data.channel_ids.reduce(\n      (channels, channelId) => channels.set(channelId, guild.channels.cache.get(channelId)),\n      new Collection(),\n    );\n\n    /**\n     * The roles assigned to a member when the option is selected\n     * @type {Collection<Snowflake, Role>}\n     */\n    this.roles = data.role_ids.reduce(\n      (roles, roleId) => roles.set(roleId, guild.roles.cache.get(roleId)),\n      new Collection(),\n    );\n\n    /**\n     * The data for an emoji of a guilds onboarding prompt option\n     * @typedef {Object} GuildOnboardingPromptOptionEmoji\n     * @property {?Snowflake} id The id of the emoji\n     * @property {string} name The name of the emoji\n     * @property {boolean} animated Whether the emoji is animated\n     */\n\n    /**\n     * The emoji of the option\n     * @type {?GuildOnboardingPromptOptionEmoji}\n     */\n    this.emoji = resolvePartialEmoji(data.emoji);\n\n    /**\n     * The title of the option\n     * @type {string}\n     */\n    this.title = data.title;\n\n    /**\n     * The description of the option\n     * @type {?string}\n     */\n    this.description = data.description;\n  }\n\n  /**\n   * The guild this onboarding prompt option is from\n   * @type {Guild}\n   * @readonly\n   */\n  get guild() {\n    return this.client.guilds.cache.get(this.guildId);\n  }\n}\n\nexports.GuildOnboardingPromptOption = GuildOnboardingPromptOption;\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAM;EAAEA;AAAW,CAAC,GAAGC,OAAO,CAAC,uBAAuB,CAAC;AACvD,MAAMC,IAAI,GAAGD,OAAO,CAAC,QAAQ,CAAC;AAC9B,MAAM;EAAEE;AAAoB,CAAC,GAAGF,OAAO,CAAC,cAAc,CAAC;;AAEvD;AACA;AACA;AACA;AACA,MAAMG,2BAA2B,SAASF,IAAI,CAAC;EAC7CG,WAAWA,CAACC,MAAM,EAAEC,IAAI,EAAEC,OAAO,EAAE;IACjC,KAAK,CAACF,MAAM,CAAC;;IAEb;AACJ;AACA;AACA;IACI,IAAI,CAACE,OAAO,GAAGA,OAAO;IAEtB,MAAMC,KAAK,GAAG,IAAI,CAACA,KAAK;;IAExB;AACJ;AACA;AACA;IACI,IAAI,CAACC,EAAE,GAAGH,IAAI,CAACG,EAAE;;IAEjB;AACJ;AACA;AACA;IACI,IAAI,CAACC,QAAQ,GAAGJ,IAAI,CAACK,WAAW,CAACC,MAAM,CACrC,CAACF,QAAQ,EAAEG,SAAS,KAAKH,QAAQ,CAACI,GAAG,CAACD,SAAS,EAAEL,KAAK,CAACE,QAAQ,CAACK,KAAK,CAACC,GAAG,CAACH,SAAS,CAAC,CAAC,EACrF,IAAId,UAAU,CAAC,CACjB,CAAC;;IAED;AACJ;AACA;AACA;IACI,IAAI,CAACkB,KAAK,GAAGX,IAAI,CAACY,QAAQ,CAACN,MAAM,CAC/B,CAACK,KAAK,EAAEE,MAAM,KAAKF,KAAK,CAACH,GAAG,CAACK,MAAM,EAAEX,KAAK,CAACS,KAAK,CAACF,KAAK,CAACC,GAAG,CAACG,MAAM,CAAC,CAAC,EACnE,IAAIpB,UAAU,CAAC,CACjB,CAAC;;IAED;AACJ;AACA;AACA;AACA;AACA;AACA;;IAEI;AACJ;AACA;AACA;IACI,IAAI,CAACqB,KAAK,GAAGlB,mBAAmB,CAACI,IAAI,CAACc,KAAK,CAAC;;IAE5C;AACJ;AACA;AACA;IACI,IAAI,CAACC,KAAK,GAAGf,IAAI,CAACe,KAAK;;IAEvB;AACJ;AACA;AACA;IACI,IAAI,CAACC,WAAW,GAAGhB,IAAI,CAACgB,WAAW;EACrC;;EAEA;AACF;AACA;AACA;AACA;EACE,IAAId,KAAKA,CAAA,EAAG;IACV,OAAO,IAAI,CAACH,MAAM,CAACkB,MAAM,CAACR,KAAK,CAACC,GAAG,CAAC,IAAI,CAACT,OAAO,CAAC;EACnD;AACF;AAEAiB,OAAO,CAACrB,2BAA2B,GAAGA,2BAA2B","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}